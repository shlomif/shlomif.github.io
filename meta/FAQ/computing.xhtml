<?xml version="1.0" encoding="utf-8"?><!DOCTYPE html><html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en"><head><title>Shlomi Fish’s FAQ - About computing and software development</title><meta charset="utf-8"/><meta name="description" content="Shlomi Fish’s Frequently Asked Questions (FAQ) List - About computing and software development"/><link rel="stylesheet" href="../../faq-indiv.css" media="screen" title="Normal"/><link rel="stylesheet" href="../../print.css" media="print"/><link rel="shortcut icon" href="../../favicon.ico" type="image/x-icon"/><meta name="viewport" content="width=device-width,initial-scale=1"/></head><body class="fancy_sects faq_indiv_entry"><div class="header" id="header"><a href="../../"><img src="../../images/evilphish-flipped.png" alt="EvilPHish site logo"/></a><div class="leading_path"><a href="../../">Shlomi Fish’s Homepage</a> → <a href="../" title="Information about this Site">Meta Info</a> → <a href="./" title="Frequently Asked Questions and Answers List (FAQ)">FAQ</a> → <b>About computing and software development</b></div></div><main class="faq faux main"><section xmlns="http://www.w3.org/1999/xhtml" class="h2"><header><h2 id="computing">About computing and software development</h2><a class="back_to_faq" href="./#computing">Node Link</a></header><section class="h3"><header><h3 id="are-you-a-programmer">Are you a programmer?</h3><a class="indiv_node" href="are-you-a-programmer.xhtml">Node Link</a></header><p>Yes, I am. For some of the publicly available source code I wrote (usually <a href="https://en.wikipedia.org/wiki/Free_and_open-source_software"><abbr title="Free and Open Source Software">FOSS</abbr></a>) see:</p><ul><li><p><a href="../../open-source/projects/">My open source projects.</a></p></li></ul><p>(I'm answering this question here, because I got asked that a lot.)</p><p>Note that software development involves other activities than programming (e.g: <a href="https://en.wikipedia.org/wiki/Software_quality_assurance">QA</a>, writing documentation or <a href="https://en.wikipedia.org/wiki/System_administrator">system administration</a>). Moreover, I believe that, despite common belief, writing HTML, or many other languages which are not <a href="https://en.wikipedia.org/wiki/Turing_completeness">Turing complete</a>, <b>is</b> programming because it requires similar discipline.</p></section><section class="h3"><header><h3 id="computers-specs">What are your Computers&#8217; Specifications?</h3><a class="indiv_node" href="computers-specs.xhtml">Node Link</a></header><p>My primary machine is a desktop machine with a:</p><ul><li>An Intel Core i3 CPU (x86-64).</li><li>8 GB of RAM.</li><li>Intel Corporation Sandy Bridge Integrated Graphics Controller (rev 09)</li><li>A 2 TB hard-disk.</li><li>A 21&#8243; Wide LCD Screen by LG.</li><li>Intel Corporation Cougar Point High Definition Audio Controller.</li><li>Intel Corporation 82579V Gigabit Network Connection.</li></ul><p>I&#8217;m running <a href="https://getfedora.org/">Fedora Linux</a> and <a href="https://www.debian.org/">Debian GNU/Linux</a> on it. This desktop computer replaced my older computer which was a:</p><ul><li>Pentium 4, 2.4 GHz CPU.</li><li>2.5 GB of RAM.</li><li>An ATI Radeon HD 2600 card.</li><li>One 160 GB Hard-disk and two smaller ones of 80 GB or so.</li><li>A 19&#8243; LCD Screen by ViewSonic.</li><li>A standard built-in AC&#8217;97 sound-card.</li></ul><p>I&#8217;m using mostly <a href="http://en.wikipedia.org/wiki/Free_and_open_source_software">Free and Open Source Software</a> (= <a href="https://en.wikipedia.org/wiki/Free_and_open-source_software"><abbr title="Free and Open Source Software">FOSS</abbr></a>) on it, and try not to depend on non-FOSS software. I documented <a href="../../philosophy/computers/open-source/not-trust-non-FOSS/">the reason why I no longer trust non-FOSS software</a> on my technical weblog.</p><p>I also have an <a href="https://en.wikipedia.org/wiki/Next_Unit_of_Computing">Intel NUC</a> computer, with the following specs:</p><ul><li><p>Intel(R) Core(TM) i5-8259U CPU @ 2.30GHz</p></li><li><p>Intel Iris Plus Graphics 655</p></li><li><p>AOC 22E1W monitor</p></li><li><p>Intel Cannon Point-LP High Definition Audio Controller</p></li><li><p>One SSD and one HDD drives.</p></li></ul><p>It replaces an Acer Aspire 5738DZG laptop with the following specs:</p><ul><li>Intel Pentium(R) Dual-Core CPU T4300 @ 2.10GHz. (x86-64).</li><li>ATI Mobility Radeon&#8482; HD 4570 (r700)</li><li>15.6&#8243; 3D HD LCD Screen.</li><li>3 GB Memory</li><li>320 GB Hard Disk Drive.</li><li>&#8220;DVD Super Multi DL drive&#8221;</li><li>Acer Nplify&#8482; 802.11b/g/n.</li></ul><p>It runs <a href="https://en.wikipedia.org/wiki/Fedora_(operating_system)">Fedora Linux</a>.</p></section><section class="h3"><header><h3 id="programming_languages">Which Programming Language did you start with? Which programming languages do you know now?</h3><a class="indiv_node" href="programming_languages.xhtml">Node Link</a></header><p>When I was in the 4th grade (back around 1987), my father bought my family a PC XT machine, with 640 KB of memory, and a colour <a href="http://en.wikipedia.org/wiki/Color_Graphics_Adapter">CGA</a> screen. Using this, my friends and I started learning how to program, first using the <a href="http://en.wikipedia.org/wiki/BASIC">BASIC</a> interpreter that was installed on the BIOS and was invoked if you didn&#8217;t put a diskette inside, and then using some of the BASIC variants that ran on DOS such as BASIC.COM, <a href="http://en.wikipedia.org/wiki/GW-BASIC">GWBASIC</a> and <a href="http://en.wikipedia.org/wiki/IBM_BASICA">BASICA</a>. So for better or for worse, BASIC was my first language.</p><p>I&#8217;ve neglected programming for a long while and just played games on the computer, and possibly did some work on it. However, I returned to programming when I was in the 9th grade, this time on a 386 SX with <a href="http://en.wikipedia.org/wiki/QBasic">QBasic</a> which came with some later versions of DOS, and later on with <a href="http://en.wikipedia.org/wiki/Turbo_C%2B%2B">Borland Turbo C++</a> 3.0 (which sported a much more primitive variant of C++ compared to today&#8217;s flavours). Despite knowing C and C/C++, I still found QBasic of use, due to my ability to rapidly develop code in it (what Larry Wall later called &#8220;whipuptitude&#8221; in some of his talks.). I also may have dabbled with Excel&#8217;s <a href="http://en.wikipedia.org/wiki/Visual_Basic_for_Applications">Visual Basic for Applications (VBA)</a> before I graduated from high school, and during my 10th grade, I learned some Pascal using Microsoft QuickPascal on DOS.</p><p>After I graduated from high school, I worked at three firms. In some of them I've done C or C++ development on Windows, but I also studied some <a href="http://en.wikipedia.org/wiki/SQL">SQL</a>, and became familiar with some <a href="http://en.wikipedia.org/wiki/Unix">UNIX</a> flavours and with <a href="http://perl-begin.org/">Perl 5</a> and the UNIX shells. UNIX has been an epiphany for me: until then I used DOS and Windows, and considered them bad, but did not know what a good system is. UNIX was the first genuinely good system that I have encountered. I also fell in love with Perl, and it became my favourite language.</p><p>By the time I started studying the <a href="http://en.wikipedia.org/wiki/Technion_%E2%80%93_Israel_Institute_of_Technology">Technion</a>, I had a relatively early distribution of <a href="http://en.wikipedia.org/wiki/Linux">Linux</a> installed on my computer, and started playing with various languages available there.</p><p>You can find a list of languages that I currently know on <a href="../../SFresume.html">my r&#233;sum&#233;</a>.</p></section><section class="h3"><header><h3 id="text_editors">Which text editors are you using? What is your favourite text editor?</h3><a class="indiv_node" href="text_editors.xhtml">Node Link</a></header><p>Well, I'm usually using gvim (the Gtk+/GUI version of the <a href="http://www.vim.org/">Vim</a> programmer&#8217;s editor) for coding and for writing purely-Latin texts. For bidirectional (mixed Hebrew+Latin / etc.) texts, I sometimes use <a href="http://en.wikipedia.org/wiki/Kate_%28text_editor%29">Kate</a> instead, with a fallback on <a href="http://en.wikipedia.org/wiki/Gedit">gedit</a>. Sometimes, I use Vim (the console version) for quick edits or when I cannot or would prefer not to use a GUI editor.</p><p>The reason I am using gvim instead of vim, is because many terminal emulators on Linux (including Konsole which is my preferred one) mess up with the Hebrew/Latin bidirectionality too much (enough to confuse vim), because the syntax highlighting looks nicer there, because the mouse support is better, and because it does not start much slower than Vim. If the console-based Vim works for you, feel free to use it.</p><p>Regarding <a href="http://en.wikipedia.org/wiki/Emacs">Emacs</a>: from what I know, it should be a fine text editor, but I could never get used to it, so that&#8217;s not what I&#8217;m using. I was told about <a href="http://www.emacswiki.org/emacs/Evil">the Evil mode</a> which provides partial Vim compatibility, but I didn&#8217;t try it, in part because I&#8217;m now using quite a lot of Vim extensions written in vimscript and in Vim&#8217;s extension languages, which are not supported by Evil.</p><section class="h4"><header><h4 id="past_text_editors">Which text editors have you used in the past?</h4><a class="indiv_node" href="past_text_editors.xhtml">Node Link</a></header><ul><li><p>I used <a href="https://en.wikipedia.org/wiki/QBasic">QBasic</a> and edit.com on DOS, as well as <a href="https://en.wikipedia.org/wiki/Turbo_C%2B%2B">Turbo C++</a>.</p></li><li><p>I used <a href="https://en.wikipedia.org/wiki/Joe's_Own_Editor">Joe</a> extensively on Unix-like OSes.</p></li><li><p>I also used <a href="https://en.wikipedia.org/wiki/NEdit">NEdit</a> on them.</p></li><li><p>I used <a href="https://www.texteditors.org/cgi-bin/wiki.pl?FTE">FTE</a> on Unixes and Windows as well (by the originator of <a href="https://github.com/ice-wm/icewm">IceWM</a>).</p></li><li><p>I used <a href="http://freshmeat.sourceforge.net/projects/cooledit">Cooledit</a> in the Technion due to lacking conditions, and was frustrated by its lack of Windows-like copy/paste keyboard bindings.</p></li></ul></section></section><section class="h3"><header><h3 id="choice_of_operating_system">Why are you using your choice of an operating system (= Fedora Linux)?</h3><a class="indiv_node" href="choice_of_operating_system.xhtml">Node Link</a></header><ol><li><p><a href="https://en.wikipedia.org/wiki/Fedora_Linux">Fedora</a> has up-to-date software.</p></li><li><p>Fedora has regular releases.</p></li><li><p>Fedora has relatively little contributors' redtape.</p></li><li><p>Its desktop experience is good.</p></li><li><p>Fedora is popular enough, so it has enough (paid or pro-bono) contributors so most of the critical usability and reliability issues are handled fairly quickly.</p></li><li><p>I find the RPM / DNF / etc. stack easier to use than dpkg and apt. I also am more versed in "hacking" *.src.rpm packages than in debian's toolchain.</p></li><li><p>Fedora's online community is, as a general rule, friendly, patient, and helpful.</p></li></ol><p>That put aside, I still willingly try to help people, who are using other Linux distributions, or even non-Linux operating systems, with their technical problems. Part of my motivation is <a href="../../humour/fortunes/show.cgi?id=esr-catb--writing-for-the-world">this quote</a> from &#8220;The Cathedral and the Bazaar&#8221;.</p><p>Also note that your experience and preferences may vary.</p></section><section class="h3"><header><h3 id="bsc_final_projects">What were your B.Sc.'s Final Projects?</h3><a class="indiv_node" href="bsc_final_projects.xhtml">Node Link</a></header><p>They were:</p><ol><li><p><a href="https://github.com/shlomif/ip-noise">The IP Noise Simulator</a>. The user-land version should still work and may be of interest.</p></li><li><p><a href="https://github.com/shlomif/zavitan-a-seminars-manager">Zavitan</a> - a web-based seminars manager written in Perl 5.</p></li></ol></section><section class="h3"><header><h3 id="why_duckduckgo">Why are you using DuckDuckGo? (Instead of Google?)</h3><a class="indiv_node" href="why_duckduckgo.xhtml">Node Link</a></header><ol><li><p>To prevent <a href="https://en.wikipedia.org/wiki/Filter_bubble">Filter bubble</a>.</p></li><li><p>I like their keyboard navigation (left/right/up/down keys).</p></li><li><p>Their search URLs have less junk than Google's.</p></li><li><p>I like the bang commands ("!g" for a Google search; "!gh" for a GitHub search; etc.).</p></li></ol><p>Also note that DuckDuckGo claims to avoid tracking the users, but I personally <a href="../../philosophy/philosophy/putting-cards-on-the-table-2019-2020/#fear-is-path-to-dark-side">do not care too much</a> about that.</p></section><section class="h3"><header><h3 id="why_xml">Why are you still using XML?</h3><a class="indiv_node" href="why_xml.xhtml">Node Link</a></header><p>With the advent of <a href="https://en.wikipedia.org/wiki/JSON">JSON</a>, and similar formats such as <a href="https://en.wikipedia.org/wiki/YAML">YAML</a>, some <a href="../../humour/fortunes/show.cgi?id=two-kinds-of-fools">hipster</a> geeks have proclaimed that XML-based grammars no longer have any legitimate use. However, while I use JSON and YAML for many tasks, I still find XML (and related technologies such as <a href="https://en.wikipedia.org/wiki/DocBook">DocBook 5</a>, <a href="https://en.wikipedia.org/wiki/XPath">XPath</a>, <a href="https://en.wikipedia.org/wiki/RELAX_NG">RELAX NG</a>, and <a href="https://en.wikipedia.org/wiki/XSLT">XSLT</a> ) of use. Part of the reason is that XML can be used to add markup to a substring of the text (e.g.: like the <a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a">&lt;a&gt; element</a>).</p><p>I recall that some <a href="https://en.wikipedia.org/wiki/Lisp_(programming_language)">Lisp</a> fans argued that XML is <a href="https://en.wikipedia.org/wiki/Syntactic_sugar">syntactic sugar</a> for <a href="https://en.wikipedia.org/wiki/S-expression">S-expressions</a>, but I think it is a moot point, because we can encode and decode them both to/from a binary stream of 0s and 1s, JSON, or most other syntaxes. Syntax, while often considered marginal, is nevertheless important, and I don't think I'll enjoy writing text documents completely using <a href="https://www.netfunny.com/rhf/jokes/90q2/lispcode.html">S-expressions</a>. I also recall reading about a new language that allows mixing and matching both lisp-like code and XML code.</p><hr/><p>Now, with respect to <a href="../../philosophy/computers/web/choice-of-docs-formats/">HTML 5, the Markdowns and AsciiDoc</a>, while I use them sometimes, they are less structured and more errorprone than many XML grammars, and often are not semantic enough for all my use cases. I can use <a href="https://en.wikipedia.org/wiki/XSLT">XSLT</a>, Python, or similar, to convert XML to XHTML5 anyway (and I often do).</p><p>Finally, note that I also use some custom formats such as <a href="https://github.com/shlomif/shlomi-fish-homepage/blob/80280dc126c31238580c2556bfe05c836190f617/lib/hunspell/whitelist1.txt">this one</a> or <a href="https://www.shlomifish.org/open-source/projects/XML-Grammar/Fiction/">Screenplay-Text</a>.</p></section><section class="h3"><header><h3 id="foss">About Free and Open Source Software (FOSS)</h3><a class="indiv_node" href="foss.xhtml">Node Link</a></header><section class="h4"><header><h4 id="how_to_become_hacker">How can I become an open-source contributor?</h4><a class="indiv_node" href="how_to_become_hacker.xhtml">Node Link</a></header><p>See <a href="../../philosophy/computers/open-source/how-to-start-contributing/">what I wrote</a> about it on my homepage. I&#8217;m giving instructions there. You may also wish to read my <a href="../../philosophy/philosophy/advice-for-the-young/">&#8220;Advice for the Young&#8221;</a> essay.</p></section><section class="h4"><header><h4 id="help_me_crack">Can you help me intrude into/exploit (so-called &#8220;crack&#8221; or &#8220;hack&#8221;) someone&#8217;s server/instagram account/IRC account/Twitter/Facebook/etc.?</h4><a class="indiv_node" href="help_me_crack.xhtml">Node Link</a></header><p>No, and that is because I am not a <a href="http://en.wikipedia.org/wiki/Hacker_%28computer_security%29">computer intruder or a &#8220;cracker&#8221;</a>, and even if I were versed in that, I wouldn't try to get myself and other people in trouble by trying to exploit vulnerabilities on useful, ethical, services.</p><p>There are better ways to handle your online problems than to try to do cracking. For more insights, see:</p><ul><li><p><a href="http://www.catb.org/esr/writings/unix-koans/script-kiddie.html">&#8220;Master Foo and the Script Kiddie&#8221;</a> - a modern UNIX koan by Eric Raymond.</p></li><li><blockquote><p>Q: Would you help me to crack a system, or teach me how to crack?</p><p>A: No. Anyone who can still ask such a question after reading this FAQ is too stupid to be educable even if I had the time for tutoring. Any emailed requests of this kind that I get will be ignored or answered with extreme rudeness.</p><p>Q: How can I get the password for someone else's account?</p><p>A: This is cracking. Go away, idiot.</p><p>Q: How can I break into/read/monitor someone else's email?</p><p>A: This is cracking. Get lost, moron.</p><p>Q: How can I steal channel op privileges on IRC?</p><p>A: This is cracking. Begone, cretin.</p></blockquote><p>From <a href="http://catb.org/~esr/faqs/hacker-howto.html">Eric Raymond&#8217;s &#8220;How to Become a Hacker&#8221;</a></p></li></ul></section><section class="h4"><header><h4 id="are_you_a_hacker">Are you a hacker?</h4><a class="indiv_node" href="are_you_a_hacker.xhtml">Node Link</a></header><p>The word "Hacker" can mean several things. It can mean a computer intruder, in which case, see <a href="./#help_me_crack">the question above</a> - I am certainly not one. Otherwise, it can mean a clever and competent enthusiast of a certain field of endeavour, primarily used by and for computer workers, but not exclusive to them. As <a href="../../philosophy/culture/case-for-commercial-fan-fiction/indiv-nodes/hacking_and_amateur__vs__conformism_and_professional.xhtml">I note</a>, by inspiration from other sources, hacking is at least several millennia old.</p><p>Anyway, a "hacker" is something that normally other people call you rather than something you call yourself. I aspire for excellence and continuous improvement in several fields of endeavour (including software development), but only other people can judge whether I am indeed a hacker of them. And my policy is to <a href="http://shlomifishswiki.branchable.com/Encourage_criticism_and_try_to_get_offended/">encourage criticism</a> rather than fanboy/fangirl-ism.</p></section><section class="h4"><header><h4 id="how_use_hg">You&#8217;re using Mercurial (on Bitbucket.org/etc.) for some of your projects. How can I learn how to use it?</h4><a class="indiv_node" href="how_use_hg.xhtml">Node Link</a></header><p>There are some links to tutorials on <a href="http://better-scm.shlomifish.org/alternatives/mercurial/">the Mercurial page</a> of the Better-SCM site. More can be found in a <a href="https://duckduckgo.com/?q=mercurial%20tutorial">web search for &#8220;mercurial tutorial&#8221;</a>. Mercurial is not too hard to learn.</p></section><section class="h4"><header><h4 id="Shlomif_Common_cmake">When building some of your CMake-based projects, I am getting an error for a missing &#8220;Shlomif_Common.cmake&#8221; file</h4><a class="indiv_node" href="Shlomif_Common_cmake.xhtml">Node Link</a></header><p>Yes, you can find it in <a href="https://github.com/shlomif/shlomif-cmake-modules">this repository</a>. Just put it in the source directory. Such a problem should not be encountered when building a source release from the source archive downloads.</p></section><section class="h4"><header><h4 id="how_many_projects">How many Projects are you Working on?</h4><a class="indiv_node" href="how_many_projects.xhtml">Node Link</a></header><p>I have originated, maintain, or contribute to more than one project and keep switch-tasking between them. Some of them have sub-projects or individual tasks. You can find some lists and activity logs on <a href="../../open-source/">this page</a>.</p></section><section class="h4"><header><h4 id="github_account">Do you have a GitHub account?</h4><a class="indiv_node" href="github_account.xhtml">Node Link</a></header><p>Yes, see <a href="../../open-source/projects/#forges_home_pages">this link</a> for more information.</p></section><section class="h4"><header><h4 id="thought_you_were_a_Perl_guy">Why are you working on this non-Perl 5/6 project? I thought you were a Perl guy!</h4><a class="indiv_node" href="thought_you_were_a_Perl_guy.xhtml">Node Link</a></header><p>While I have written a lot of Perl 5 code, and often still maintain it because it cannot be all reimplemented in something else overnight, Perl is not the only language I know and use. Perl is not exactly a religion that requires full devotion to its belief, and I actually met a woman who considers herself both a <a href="https://en.wikipedia.org/wiki/Christian">Christian</a> as well as a <a href="https://en.wikipedia.org/wiki/Buddhism">Buddhist</a> so&#8230;</p><p>For more information, see:</p><ul><li><p><a href="http://fc-solve.shlomifish.org/faq.html#is_fc_solve_written_in_perl">Is Freecell Solver written in Perl?</a></p></li><li><p><a href="https://www.perl.com/pub/2000/12/advocacy.html/">Why I Hate Advocacy</a> - by Mark-Jason Dominus.</p></li></ul></section><section class="h4"><header><h4 id="publishing_proj_euler">Why did you publicly share your solutions to Project Euler problems despite their request to avoid doing that?</h4><a class="indiv_node" href="publishing_proj_euler.xhtml">Node Link</a></header><p>For several reasons:</p><ol><li><p>Making the GitHub project public allows me to use Travis-CI and other <a href="https://en.wikipedia.org/wiki/Continuous_integration">CI</a> services free of charge.</p></li><li><p>I enjoy sharing my work with others.</p></li><li><p>I think that <a href="https://en.wikiquote.org/wiki/Linus_Torvalds">Linus Torvalds&#8217; quote</a> that <q>Only wimps use tape backup: real men just upload their important stuff on FTP, and let the rest of the world mirror it ;)</q> has a grain of truth in it.</p></li><li><p>It may be useful as evidence of the fact I solved these for prospective employers and other interested parties.</p></li></ol></section><section class="h4"><header><h4 id="proj_euler_in_order">Do you solve the Project Euler problems in their order?</h4><a class="indiv_node" href="proj_euler_in_order.xhtml">Node Link</a></header><p>No, I don't. I often skip problems which I find too difficult or not interesting enough. I did solve 149 out of the first 150 problems (excluding <a href="https://projecteuler.net/problem=143">No. 143</a>).</p></section><section class="h4"><header><h4 id="todo_lists_and_organised">How do you keep organised? What do you use for To-Do lists?</h4><a class="indiv_node" href="todo_lists_and_organised.xhtml">Node Link</a></header><p>First of all, see <a href="https://shlomif-tech.livejournal.com/74492.html">this post I wrote</a> about why E-mail is not only a to-do list and other resources that serve as virtual to-do lists. For my proper to-do lists, I use <a href="https://www.vim.org/">gvim/vim</a>, either using plaintext or using the <a href="https://github.com/aaronbieber/vim-quicktask">vim-quicktask plugin</a>.</p></section><section class="h4"><header><h4 id="explicit_licensing">Why do you mention that a certain work or post is copyrighted by you and under a certain licence?</h4><a class="indiv_node" href="explicit_licensing.xhtml">Node Link</a></header><p>First of all note that <a href="https://en.wikipedia.org/wiki/IANAL"><abbr title="I am not a lawyer">IANAL</abbr></a>/etc. Anyway, I try to give explicit and more permissive licences (e.g: <a href="https://creativecommons.org/">Creative Commons</a> ones) to all my posts and works because otherwise they are <a href="https://en.wikipedia.org/wiki/All_rights_reserved">All Rights Reserved</a> by default and so under much more restrictive implicit licensing conditions. I know that <a href="https://en.wikipedia.org/wiki/Ashleigh_Brilliant">Ashleigh Brilliant</a> got copyright to apply to relatively short sentences (which most of my posts are longer than them), and that there was a court decision that made it a violation to sample and reuse even a single chord of a copyrighted song. So there may not be a minimal limit to how substantial a copyrightable work can be.</p><p>Most of the licences I use permit some use that will be normally be forbidden by default so you are better off and it is better to be safe than sorry.</p><p>Also see:</p><ul><li><p><a href="../../humour/fortunes/show.cgi?id=sharp-programming-copyrighting-fibonacci">Copyrighting Fibonacci</a>.</p></li></ul></section><section class="h4"><header><h4 id="expat_license">What is the &#8220;Expat License&#8221;?</h4><a class="indiv_node" href="expat_license.xhtml">Node Link</a></header><p>It is what the FSF <a href="https://www.gnu.org/licenses/license-list.html#Expat">calls</a> the so-called <a href="https://opensource.org/licenses/MIT">MIT License</a> (or SPDX: MIT ). The original X11 licence has an extra clause.</p></section><section class="h4"><header><h4 id="why_so_many_github_repos">Why do you have so many GitHub repositories?</h4><a class="indiv_node" href="why_so_many_github_repos.xhtml">Node Link</a></header><p>Many of <a href="https://github.com/shlomif?tab=repositories">my GitHub repositories</a> were one-off clones for correcting some typos, or fixing a bug followed by a pull request. Deleting them all will require some time, and also requires entering the password again.</p><p>Another factor that makes my repositories more numerous is the fact that I use individual repositories for <a href="https://en.wikipedia.org/wiki/Image_macro">image macros</a>, for stories and screenplays, and for some essays. I am not a purist of the <a href="https://en.wikipedia.org/wiki/Monorepo">"monorepo"</a> strategy.</p></section><section class="h4"><header><h4 id="why_perl">Why are you still using Perl? Can't you rewrite all your Perl code in Python / JavaScript / TypeScript / Erlang / Intercal / etc.?</h4><a class="indiv_node" href="why_perl.xhtml">Node Link</a></header><p>It is true that Perl 5 has somewhat fallen out of favour, but as much as I like Python (and I do), I still like Perl. One cannot rewrite their entire codebase in [insert hyped language/stack/framework/technology of the present] every 6 months or so. Back when I was interested in learning <a href="https://en.wikipedia.org/wiki/Ruby_(programming_language)">Ruby</a> some of its enthusiasts implied I should use <a href="https://en.wikipedia.org/wiki/Ruby_on_Rails">Rails</a> for my sites. And guess what? The Rails and Ruby craze and hype are gone and <a href="../../humour/fortunes/show.cgi?id=compiling-a-C-program-from-20-years-ago">Rails has its share of issues</a> and I'm glad my site was not converted to a Rails application. It can also happen to <a href="../../humour/fortunes/show.cgi?id=sharp-gamedev--everything-is-dead">node.js, Python</a>, PHP, or WordPress.</p><p>Currently <a href="https://dev.perl.org/perl5/">perl5</a> is quite actively developed with annual major releases, and with as little <a href="http://blogs.perl.org/users/aristotle/2013/06/decade-scale.html">backward compatibility broken</a> as possible. The <a href="https://en.wikipedia.org/wiki/CPAN">CPAN</a> ecosystem is not quite as active as <a href="https://en.wikipedia.org/wiki/Python_Package_Index">PyPI</a> or <a href="https://en.wikipedia.org/wiki/Npm_(software)">npm</a>, but still proves useful often, and also avoids breaking backward compatibility as much as possible. Moreover, I can make use of modules and libraries in other languages using <a href="https://metacpan.org/pod/distribution/Inline/lib/Inline.pod">the Inline::* family</a> and other <a href="https://en.wikipedia.org/wiki/Foreign_function_interface">FFIs</a>.</p><p>Note that I also write some new code in Python, Julia, bash, C, C++ and other languages.</p></section><section class="h4"><header><h4 id="why_did_you_quit_mageia">Why did you quit using and contributing to Mageia Linux?</h4><a class="indiv_node" href="why_did_you_quit_mageia.xhtml">Node Link</a></header><p>Contributing to Mageia was too time consuming, and Mageia is too obscure, unpopular, and mismanaged. I like <a href="./#choice_of_operating_system">Fedora</a> and Debian better. <a href="https://twitter.com/shlomif/status/1496066527107465222">I told Atlas to shrug.</a></p></section><section class="h4"><header><h4 id="why_are_you_using_vlc">Why are you using VLC? (Instead of mpv?)</h4><a class="indiv_node" href="why_are_you_using_vlc.xhtml">Node Link</a></header><p>First of all note that I use mpv for quickly playing media files from the command-line. Otherwise, I prefer VLC's user-interface and its overall user-experience. It is not perfect, but generally better than mpv's spartan one.</p></section><section class="h4"><header><h4 id="why_skip_odd_minor_versions">Why do your projects&#8217; releases skip odd minor version numbers?</h4><a class="indiv_node" href="why_skip_odd_minor_versions.xhtml">Node Link</a></header><p>This is what <a href="https://www.producingoss.com/en/development-cycle.html#release-number-even-odd-strategy">the "Producing OSS" book calls "The Even/Odd Strategy"</a>. Quoting from it ( <a href="https://www.producingoss.com/en/copyright.html">under CC-by-sa</a> ):</p><blockquote cite="https://www.producingoss.com/en/development-cycle.html#release-number-even-odd-strategy"><p>Some projects use the parity of the minor number component to indicate the stability of the software: even means stable, odd means unstable. This applies only to the minor number, not the major or micro numbers. Increments in the micro number still indicate bug fixes (no new features), and increments in the major number still indicate big changes, new feature sets, etc.</p><p>The advantage of the even/odd system, which has been used by the Linux kernel project<a href="https://www.producingoss.com/en/development-cycle.html#ftn.idp3103" class="footnote"><sup class="footnote">[78]</sup></a> among others, is that it offers a way to release new functionality for testing without subjecting production users to potentially unstable code. People can see from the numbers that "2.4.21" is okay to install on their live web server, but that "2.5.1" should probably stay confined to home workstation experiments. The development team handles the bug reports that come in from the unstable (odd-minor-numbered) series, and when things start to settle down after some number of micro releases in that series, they increment the minor number (thus making it even), reset the micro number back to "0", and release a presumably stable package.</p><p>This system preserves, or at least, does not conflict with, the compatibility guidelines given earlier. It simply overloads the minor number with some extra information. This forces the minor number to be incremented about twice as often as would otherwise be necessary, but there's no real harm in that. The even/odd system is probably best for projects that have very long release cycles, and which by their nature have a high proportion of conservative users who value stability above new features. It is not the only way to get new functionality tested in the wild, however. In <a class="xref" href="https://www.producingoss.com/en/stabilizing-a-release.html" title="Stabilizing a Release">the section called &#8220;Stabilizing a Release&#8221;</a> we will examine another, perhaps more common, method of releasing potentially unstable code to the public, in which the release number is further marked so that people have an idea of the risk/benefit trade-offs immediately on seeing the release's name.</p></blockquote></section><section class="h4"><header><h4 id="use_of_inkscape">For what are you using Inkscape?</h4><a class="indiv_node" href="use_of_inkscape.xhtml">Node Link</a></header><p>I use it for <a href="../../humour/image-macros/">captioned images</a> mostly lately.</p></section></section></section></main><footer><div class="foot_left"><ul class="bt_nav"><li><a href="../../">Home</a></li><li><a href="../../me/">About</a></li><li><a href="../../me/contact-me/">Contact Us</a></li><li><a href="../../meta/privacy-policy/">Privacy Policy</a></li><li><a href="../../meta/anti-spam-policy/">Anti-Spam Policy</a></li><li><a href="../../meta/FAQ/" title="Frequently asked questions list">FAQ</a></li><li><a href="../../me/blogs/">RSS/Atom Feeds</a></li></ul><p>Written, designed, and maintained by Shlomi Fish, <a href="mailto:shlomif@shlomifish.org">shlomif@shlomifish.org</a>.</p></div><a href="../../"><img src="../../images/bk2hp-v2.min.svg" class="bk2hp" alt="Back to my Homepage"/></a></footer></body></html>