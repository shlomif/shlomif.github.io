<?xml version="1.0" encoding="UTF-8"?><html xmlns="http://www.w3.org/1999/xhtml" lang="en-GB"><head><title>C and C++ Elements to Avoid</title><link rel="stylesheet" type="text/css" href="docbook.css"/><link rel="stylesheet" type="text/css" href="style.css"/><meta name="generator" content="DocBook XSL Shlomif"/><link rel="next" href="bad-elements.xhtml" title="The List of Bad Elements"/></head><body><header><div class="center ads_top"/><div class="navheader"><table style="width:100%"><tr><th style="text-align:center" colspan="3">C and C++ Elements to Avoid</th></tr><tr><td style="width:20%;text-align:left"> </td><th style="width:60%;text-align:center"> </th><td style="width:20%;text-align:right"> <a accesskey="n" href="bad-elements.xhtml">Next</a></td></tr></table><hr/></div></header><section xml:lang="en-GB" class="article"><div class="titlepage"><div><div><h1 id="main_doc" class="title">C and C++ Elements to Avoid</h1></div><div><div class="authorgroup"><div class="author"><h2 class="author"><span class="firstname">Shlomi</span> <span class="surname">Fish</span></h2><div class="affiliation"><div class="address"><p><br/>            <code class="email">&lt;<a class="email" href="mailto:shlomif@cpan.org">shlomif@cpan.org</a>&gt;</code><br/>            <code class="uri"><a class="uri" href="https://www.shlomifish.org/">Shlomi Fish’s Homepage</a></code><br/>          </p></div></div></div></div></div><div><p class="copyright">Copyright © 2010 Shlomi Fish</p></div><div><div id="main_legal_notice" class="legalnotice"><p>This document is copyrighted by Shlomi Fish under the Creative Commons Attribution 4.0 Unported License.</p><p>Code excerpts are assumed to be under the https://en.wikipedia.org/wiki/MIT_License .</p></div></div></div><hr/></div><div class="toc"><div class="toc-title">Table of Contents</div><ul class="toc"><li><span class="section"><a href="index.xhtml#intro">Introduction</a></span></li><li><span class="section"><a href="bad-elements.xhtml">The List of Bad Elements</a></span><ul><li><span class="section"><a href="bad-elements.xhtml#no-indentation">No Indentation</a></span></li><li><span class="section"><a href="bad-elements.xhtml#no-compiler-warning-flags">Compiling without warnings flags</a></span></li><li><span class="section"><a href="bad-elements.xhtml#calling-variables-file">Calling variables "file"</a></span></li><li><span class="section"><a href="bad-elements.xhtml#identifiers-without-underscores">Identifiers without underscores</a></span></li><li><span class="section"><a href="bad-elements.xhtml#paragraphs">Write code in Paragraphs using Empty Lines</a></span></li><li><span class="section"><a href="bad-elements.xhtml#lowercase_modules_and_pkgs">Don't start Classes with a Lowercase Letter</a></span></li><li><span class="section"><a href="bad-elements.xhtml#non-intrusive-commenting">Avoid Intrusive Commenting</a></span></li><li><span class="section"><a href="bad-elements.xhtml#accessing_object_slots_directly">Accessing Object Slots Directly</a></span></li><li><span class="section"><a href="bad-elements.xhtml#caret_and_dollar_sign_in_regexes">'^' and '$' in Regular Expressions</a></span></li><li><span class="section"><a href="bad-elements.xhtml#magic_numbers">Magic Numbers</a></span></li><li><span class="section"><a href="bad-elements.xhtml#mixing_tabs_and_spaces">Mixing Tabs and Spaces</a></span></li><li><span class="section"><a href="bad-elements.xhtml#several_synchronised_arrays">Several synchronised arrays.</a></span></li><li><span class="section"><a href="bad-elements.xhtml#modifying_iterated_data_structures">Modifying data structures while iterating through them.</a></span></li><li><span class="section"><a href="bad-elements.xhtml#code_in_foreign_lang">Comments and Identifiers in a Foreign Language</a></span></li><li><span class="section"><a href="bad-elements.xhtml#using-namespace-std">“using namespace std;”</a></span></li><li><span class="section"><a href="bad-elements.xhtml#law_of_demeter">The Law of Demeter</a></span></li><li><span class="section"><a href="bad-elements.xhtml#delegating_parameter_passing">Passing parameters in delegation</a></span></li><li><span class="section"><a href="bad-elements.xhtml#duplicate_code">Duplicate Code</a></span></li><li><span class="section"><a href="bad-elements.xhtml#long_functions">Long Functions and Methods</a></span></li><li><span class="section"><a href="bad-elements.xhtml#ternary_operator_instead_of_if_else">Using the ternary operator for side-effects instead of if/else</a></span></li><li><span class="section"><a href="bad-elements.xhtml#global_vars_iface">Using Global Variables as an Interface to the Module</a></span></li><li><span class="section"><a href="bad-elements.xhtml#global_or_function_static_vars">Using Global Variables or Function-"static" Variables</a></span></li><li><span class="section"><a href="bad-elements.xhtml#declaring_all_vars_at_top">Declaring all variables at the top (Pre-declarations)</a></span></li><li><span class="section"><a href="bad-elements.xhtml#trailing-whitespace">Trailing Whitespace</a></span></li><li><span class="section"><a href="bad-elements.xhtml#code_and_markup_injection">Code and Markup Injection</a></span></li><li><span class="section"><a href="bad-elements.xhtml#using_undeclared_symbols">Using Undeclared Symbols</a></span></li><li><span class="section"><a href="bad-elements.xhtml#decls_not_in_common_headers">Declarations not in common headers</a></span></li><li><span class="section"><a href="bad-elements.xhtml#headers_without_include_guards">Headers without #include guards or #pragma once</a></span></li><li><span class="section"><a href="bad-elements.xhtml#long_lines">Overly Long Lines in the Source Code</a></span></li><li><span class="section"><a href="bad-elements.xhtml#dot_asterisk">Regular Expressions starting or ending with “.*”</a></span></li><li><span class="section"><a href="bad-elements.xhtml#populating_array_with_same_reference">Populating a Data Structure with Multiple Copies of the Same Pointer or Reference</a></span></li><li><span class="section"><a href="bad-elements.xhtml#one_var_for_two_purposes">Using One Variable for Two (or More) Different Purposes</a></span></li><li><span class="section"><a href="bad-elements.xhtml#premature_optimization">Premature Optimisation</a></span></li><li><span class="section"><a href="bad-elements.xhtml#version_control">Not Using Version Control</a></span></li><li><span class="section"><a href="bad-elements.xhtml#automated_tests">Writing Automated Tests</a></span></li><li><span class="section"><a href="bad-elements.xhtml#parsing_using_regex">Parsing XML/HTML/JSON/CSV/etc. without a tried-and-tested parser</a></span></li><li><span class="section"><a href="bad-elements.xhtml#generating_non_valid_markup">Generating invalid Markup (of HTML/etc.)</a></span></li><li><span class="section"><a href="bad-elements.xhtml#capturing_instead_of_clustering_in_regexes">Capturing Instead of Clustering in Regular Expressions</a></span></li><li><span class="section"><a href="bad-elements.xhtml#buffer_overflows">Buffer Overflows</a></span></li><li><span class="section"><a href="bad-elements.xhtml#format_string_vulnerabilities">Format String Vulnerabilities (printf/etc.)</a></span></li><li><span class="section"><a href="bad-elements.xhtml#callbacks_that_dont_accept_a_context_variable">Callbacks that do not accept a “void *” context variable</a></span></li><li><span class="section"><a href="bad-elements.xhtml#not_using_a_proper_build_system">Not Using a Proper Build System</a></span></li><li><span class="section"><a href="bad-elements.xhtml#not_using_a_bug_tracker">Not Using a Bug Tracker/Issue Tracker</a></span></li></ul></li><li><span class="section"><a href="sources_of_advice.xhtml">Sources of This Advice</a></span></li></ul></div><section class="section"><div class="titlepage"><div><div><h2 id="intro" class="title">Introduction</h2></div></div></div><p>Often when people ask for help with C or C++ code, they show code that suffers from many bad or outdated elements. This is expected, as there are many bad tutorials out there, and lots of bad code that people have learned from, but it is still not desirable. To encourage best practices, here is a document of some of the common bad elements that people tend to use and some better practices that should be used instead.</p><p>A book I read said, that as opposed to most previous idea systems, they were trying to <span class="bold"><strong>liquidate negatives</strong></span> instead of to instil positives in people. So in the spirit of liquidating negatives, this tutorial-in-reverse aims to show you what <span class="bold"><strong>not to do</strong></span>.</p><p><span class="bold"><strong>Note:</strong></span> Please don't think this advice is meant as gospel. There are some instances where one can expect to deviate from it, and a lot of it can be considered only the opinion of its originators. I tried to filter the various pieces of advice I found in the <a class="link" href="sources_of_advice.xhtml" title="Sources of This Advice">sources</a> and get rid of things that are either a matter of taste, or not so critical, or that have arguments for and against (so-called <a class="link" href="http://bikeshed.com/">colour of the bike shed arguments</a>), but some of the advice here may still be controversial.</p></section></section><footer><div class="navfooter"><hr/><table style="width:100%"><tr><td style="width:40%;text-align:left"> </td><td style="width:20%;text-align:center"> </td><td style="width:40%;text-align:right"> <a accesskey="n" href="bad-elements.xhtml">Next</a></td></tr><tr><td style="width:40%;text-align:left;vertical-align:top"> </td><td style="width:20%;text-align:center"> </td><td style="width:40%;text-align:right;vertical-align:top"> The List of Bad Elements</td></tr></table></div></footer></body></html>