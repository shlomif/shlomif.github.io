<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en">
<head>
<title>What Makes Software High-Quality? (Revision 2) - It “Just Works”</title>
<meta charset="utf-8"/>
<meta name="description" content=
"What Makes Software High-Quality? (Revision 2) - It “Just Works”"/>
<link rel="stylesheet" href="../../../../../faq-indiv.css" media="screen"/>
<link rel="stylesheet" href="../../../../../screenplay.css" media="screen"
title="Normal"/>
<link rel="stylesheet" href="../../../../../print.css" media="print"/>
<link rel="shortcut icon" href="../../../../../favicon.ico" type=
"image/x-icon"/>
<meta name="viewport" content="width=device-width,initial-scale=1"/>
</head>
<body class="fancy_sects faq_indiv_entry limit_imgs_width screenplay_indiv_entry">
<div class="header" id="header">
<a href="../../../../../"><img src="../../../../../images/evilphish-flipped.png"
alt="EvilPHish site logo"/></a>
<div class="leading_path"><a href="../../../../../">Shlomi Fish’s
Homepage</a> →
<a href="../" title="What Makes Software High-Quality? (Revision 2)">What Makes Software High-Quality? (Revision 2)</a>
 → <a href="parameters-of-quality.xhtml">Parameters of Quality</a>
→ <b>It “Just Works”</b>
</div>
</div>
<div id="faux">
<main class="main faq screenplay">
<section xmlns="http://www.w3.org/1999/xhtml" class="section"><header xmlns:h="http://www.w3.org/1999/xhtml" xmlns:xhtml="http://www.w3.org/1999/xhtml" class="titlepage"><h4 id="just_works" class="title">It &#8220;Just Works&#8221;</h4><h:a class="back_to_faq" href="../#just_works">Node Link</h:a></header><p>This is a meta-parameter for quality. When people say that something &#8220;just works&#8221;, they mean that you don&#8217;t have to be concerned about getting it up and running, not spend too much time to learn it, not worry about it destroying data, or have to wonder how to troubleshoot problems with it.</p><p>A program that just works is the holy grail of high-quality software. In practice this means several things:</p><div class="orderedlist"><ol class="orderedlist"><li class="listitem"><p id="no_showstopping_bugs">A &#8220;just works&#8221; software also doesn&#8217;t have <span class="bold"><strong>any show-stopping bugs</strong></span>. While it may still have some bugs, it should mostly function correctly.</p></li><li class="listitem"><p>It has most of the <span class="bold"><strong>features people want</strong></span> and does not lack essential ones. For example, GNU Arch, an old and now mostly unused version control program, did not work on Windows 32-bit, while Subversion, a different and popular alternative, has a native port. Moreover, Mercurial, a different alternative, cannot keep empty directories (or trees of directories not containing files) in the repository. This may make both Mercurial and GNU Arch a no-starter for many uses.</p><p><a class="link" href="http://www.tendra.org/">Tendra</a> is the most prominent alternative C and C++ compiler to GCC, but it&#8217;s hardly as advanced as GCC is, does not have all of GCC&#8217;s features and extensions, and is not usable as a replacement for GCC for most needs. As such, it is hardly ever used.</p></li><li class="listitem"><p id="good_usability">A &#8220;just works&#8221; software also has <span class="bold"><strong>good usability</strong></span>. What it means is that it behaves like people expect it to. The Emacs-based editors, which are an alternative to Vim, do not invoke the menus upon pressing &#8220;Alt+F&#8221;, &#8220;Alt+E&#8221;, etc. which is the Windows convention to them.</p><p>Furthermore, when putting a single-line prompt, the prompt cannot be dismissed with either Ctrl+C or ESC, while in Vim, both keys dismiss the prompt. The key combination to dismiss it is not written anywhere on the screen and I won&#8217;t tell you what it is. According to <a class="link" href="http://www.joelonsoftware.com/uibook/chapters/fog0000000057.html">User Interface Design for Programmers</a>, <span class="quote">&#8220;<span class="quote">A user-interface is well-designed when the program behaves exactly how the user thought it would</span>&#8221;</span>.</p><p>While some people may be led to believe this is not applicable to terminal applications, TTY applications, command line applications, or even Application Programming Interfaces (APIs) - it still holds there. One thing that made me like gvim (the Graphical front-end to vim) was that it could be configured to behave much like a Windows editor. I gradually learnt more and more vim paradigms, but found the intuitive usability a great advantage. But I could never quite get used to Emacs.</p></li></ol></div></section></main>
</div>
<footer>
<div class="foot_left">
<ul class="bt_nav">
<li><a href="../../../../../">Home</a></li>
<li><a href="../../../../../me/">About</a></li>
<li><a href="../../../../../me/contact-me/">Contact Us</a></li>
<li><a href="../../../../../meta/privacy-policy/">Privacy Policy</a></li>
<li><a href="../../../../../meta/anti-spam-policy/">Anti-Spam
Policy</a></li>
<li><a href="../../../../../meta/FAQ/" title=
"Frequently asked questions list">FAQ</a></li>
<li><a href="../../../../../me/blogs/">RSS/Atom Feeds</a></li>
</ul>
<p>Written, designed, and maintained by Shlomi Fish, <a href=
"mailto:shlomif@shlomifish.org">shlomif@shlomifish.org</a>.</p>
</div>
<a href="../../../../../"><img src="../../../../../images/bk2hp-v2.min.svg" class=
"bk2hp" alt="Back to my Homepage"/></a></footer>
</body>
</html>