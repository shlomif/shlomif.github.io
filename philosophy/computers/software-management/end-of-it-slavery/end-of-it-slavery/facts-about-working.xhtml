<?xml version="1.0" encoding="UTF-8"?><html xmlns="http://www.w3.org/1999/xhtml" lang="en"><head><title>Some Facts about Working</title><link rel="stylesheet" type="text/css" href="docbook.css"/><link rel="stylesheet" type="text/css" href="style.css"/><meta name="generator" content="DocBook XSL Shlomif"/><link rel="prev" href="index.xhtml" title="The End of IT Slavery"/><link rel="next" href="we-cant-find-good-programmers.xhtml" title="“We Can’t Find Good Programmers”"/></head><body><header><div class="center ads_top"/><div class="navheader"><table style="width:100%"><tr><th style="text-align:center" colspan="3">Some Facts about Working</th></tr><tr><td style="width:20%;text-align:left"><a accesskey="p" href="index.xhtml">Prev</a> </td><th style="width:60%;text-align:center"> </th><td style="width:20%;text-align:right"> <a accesskey="n" href="we-cant-find-good-programmers.xhtml">Next</a></td></tr></table><hr/></div></header><section class="section"><div class="titlepage"><div><div><h2 id="facts-about-working" class="title">Some Facts about Working</h2></div></div></div><div class="toc"><ul class="toc"><li><span class="section"><a href="facts-about-working.xhtml#achieving-productivity">Achieving Productivity</a></span><ul><li><span class="section"><a href="facts-about-working.xhtml#reuse">Re-use instead of Start-over</a></span></li></ul></li></ul></div><p>Do you honestly believe that if you employ someone for 9 hours, you’ll get an average of close to 9 hours worth of code writing a day? Probably not. Programmers tend to get distracted. They find it hard to start coding. They need to think about what they do. They need to take breaks for various things (like drinking, eating, talking with their co-workers, etc.).</p><p>Furthermore, actual <span class="bold"><strong>code writing is not the most productive activity</strong></span>, as surprising as it sounds. That’s because if one writes code exclusively for too long, his mind will run in circles and he’ll lose his edge. And there’s something that is even more productive than actually producing output.</p><p>That thing is <span class="bold"><strong>revolutionary decisions</strong></span>. Decisions that make one more productive in the future, restructure one’s code (or one’s text or whatever) in completely better ways, or allow the worker to do something in a better way. The more such decisions he reaches, the more productive he is, and the more value he is to his company. He’s no longer just a code monkey - he’s <a class="link" href="http://www.joelonsoftware.com/items/2004/12/06.html">a “Rosh Gadol” and innovative programmer</a>, who is of much more value to the company than just someone who writes the code that other people told him how it should behave.</p><section class="section"><div class="titlepage"><div><div><h3 id="achieving-productivity" class="title">Achieving Productivity</h3></div></div></div><div class="toc"><ul class="toc"><li><span class="section"><a href="facts-about-working.xhtml#reuse">Re-use instead of Start-over</a></span></li></ul></div><p>If you want your programmers to be as productive as possible, make sure you hire good programmers, who can reflect on what they do, learn more, and who are enthusiastic about writing code and like it. Only they can be of value to you.</p><p>Paul Graham called these developers <a class="link" href="http://www.paulgraham.com/gh.html">“Great Hackers” in an essay he wrote</a>. As I said before, I can testify I’m a good (or “above-average”) programmer (and <a class="link" href="http://www.shlomifish.org/">other things</a>), but not that I’m a great one. That’s because the baker cannot testify for the quality of his dough. However, I know some people whom I can tell are great hackers.</p><p>Who are they? They are people who come up with wonderful ideas. Who are interested in many things inside or outside computers. They often can write a lot of good code, but often their code is wonderfully ugly, but still very functional, mostly bug-free, feature-rich and efficient.</p><section class="section"><div class="titlepage"><div><div><h4 id="reuse" class="title">Re-use instead of Start-over</h4></div></div></div><p>Another important factor, that is not always present in nascent programmers, is their desire or even necessity to re-use code, however ugly it may seem. Eric Raymond <a class="link" href="http://www.catb.org/~esr/writings/cathedral-bazaar/cathedral-bazaar/ar01s02.html">wrote about it in “the Cathedral and the Bazaar”</a>:</p><div class="blockquote"><blockquote class="blockquote"><p>So, did I immediately launch into a furious whirl of coding up a brand-new POP3 client to compete with the existing ones? Not on your life! I looked carefully at the POP utilities I had in hand, asking myself “Which one is closest to what I want?” Because:</p><p>2. Good programmers know what to write. Great ones know what to rewrite (and reuse).</p><p>While I don’t claim to be a great programmer, I try to imitate one. An important trait of the great ones is constructive laziness. They know that you get an A not for effort but for results, and that it’s almost always easier to start from a good partial solution than from nothing at all.</p></blockquote></div><p>Later on Joel Spolsky expanded on it in <a class="link" href="http://www.joelonsoftware.com/articles/fog0000000069.html">“Things You Should Never Do, Part I”</a>, and <a class="link" href="http://www.joelonsoftware.com/articles/fog0000000348.html">“Rub a dub dub”</a>, and it’s also been extensively documented elsewhere.</p><p>If your programmer is keen on labelling a code as “ugly”, “unusable” or “I’d like completely rewrite it from scratch”, then he’ll waste your time and be unhappy and under-productive.</p><p>Instead he should say: “give me some time to whip this code back into shape, by refactoring it [= cleaning it up]”. Believe it or not, but refactoring actually saves time, as Joel demonstrates in “Rub-a-dub-dub” and Martin Fowler in his “Refactoring” book.</p><p>So if you hire a beginning programmer with a good potential who’s full of this (bad) attitude, give him or her this reading list. It will be faster and more fun to improve the quality of the code, rather than to rewrite it from scratch.</p></section></section></section><footer><div class="navfooter"><hr/><table style="width:100%"><tr><td style="width:40%;text-align:left"><a accesskey="p" href="index.xhtml">Prev</a> </td><td style="width:20%;text-align:center"> </td><td style="width:40%;text-align:right"> <a accesskey="n" href="we-cant-find-good-programmers.xhtml">Next</a></td></tr><tr><td style="width:40%;text-align:left;vertical-align:top">The End of IT Slavery </td><td style="width:20%;text-align:center"><a accesskey="h" href="index.xhtml">Home</a></td><td style="width:40%;text-align:right;vertical-align:top"> “We Can’t Find Good Programmers”</td></tr></table></div></footer></body></html>