<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en">
<head>
<title>The Perfect IT Workplace - Revision 1 - Refactoring</title>
<meta charset="utf-8"/>
<meta name="description" content=
"The Perfect IT Workplace - Revision 1 - Refactoring"/>
<link rel="stylesheet" href="../../../../../faq-indiv.css" media="screen"/>
<link rel="stylesheet" href="../../../../../screenplay.css" media="screen"
title="Normal"/>
<link rel="stylesheet" href="../../../../../print.css" media="print"/>
<link rel="shortcut icon" href="../../../../../favicon.ico" type=
"image/x-icon"/>
<meta name="viewport" content="width=device-width,initial-scale=1"/>
</head>
<body class="fancy_sects faq_indiv_entry limit_imgs_width screenplay_indiv_entry">
<div class="header" id="header">
<a href="../../../../../"><img src="../../../../../images/evilphish-flipped.png"
alt="EvilPHish site logo"/></a>
<div class="leading_path"><a href="../../../../../">Shlomi Fish’s
Homepage</a> →
<a href="../perfect-it-workplace.xhtml" title="The Perfect IT Workplace - Revision 1">The Perfect IT Workplace - Revision 1</a>
 → <a href="the-elements.xhtml">The Elements of a Perfect Workplace</a> → <a href="software-engineering.xhtml">Software Engineering Best Practices</a>
→ <b>Refactoring</b>
</div>
</div>
<div id="faux">
<main class="main faq screenplay">
<section xmlns="http://www.w3.org/1999/xhtml" class="section"><header xmlns:h="http://www.w3.org/1999/xhtml" xmlns:xhtml="http://www.w3.org/1999/xhtml" class="titlepage"><h5 id="refactoring" class="title">Refactoring</h5><h:a class="back_to_faq" href="../perfect-it-workplace.xhtml#refactoring">Node Link</h:a></header><p><a class="link" href="http://www.refactoring.com/">Refactoring</a> is the process of improving the internal quality of the code (from "a big mess" to "squeaky-clean and modular code"), while not changing its external behaviour. This is done for mostly functional and bug-free, but sub-optimally-written, code so it can be better managed.</p><p>"Joel on Software" features two excellent article about the motivation for refactoring: <a class="link" href="http://www.joelonsoftware.com/articles/fog0000000069.html">"Things You Should Never Do, Part I (why rewriting functional code from scratch is a bad idea)"</a>, and <a class="link" href="http://www.joelonsoftware.com/articles/fog0000000348.html">"Rub a dub dub" (how and why to do refactoring).</a>.</p><p>There are many other resources for that online, along with many refactoring patterns.</p><p>There are many types of refactoring: grand refactoring sessions (= what Joel describes), continuous refactoring (refactoring as you go), "just-in-time refactoring" (refactoring enough to achieve a certain task), etc.</p><p>But refactoring is important, makes development faster in the long run (and even in the short-run), and can prevent the code from deteriorating into an ugly, non-functional mess that would be hard to salvage.</p></section></main>
</div>
<footer>
<div class="foot_left">
<ul class="bt_nav">
<li><a href="../../../../../">Home</a></li>
<li><a href="../../../../../me/">About</a></li>
<li><a href="../../../../../me/contact-me/">Contact Us</a></li>
<li><a href="../../../../../meta/privacy-policy/">Privacy Policy</a></li>
<li><a href="../../../../../meta/anti-spam-policy/">Anti-Spam
Policy</a></li>
<li><a href="../../../../../meta/FAQ/" title=
"Frequently asked questions list">FAQ</a></li>
<li><a href="../../../../../me/blogs/">RSS/Atom Feeds</a></li>
</ul>
<p>Written, designed, and maintained by Shlomi Fish, <a href=
"mailto:shlomif@shlomifish.org">shlomif@shlomifish.org</a>.</p>
</div>
<a href="../../../../../"><img src="../../../../../images/bk2hp-v2.min.svg" class=
"bk2hp" alt="Back to my Homepage"/></a></footer>
</body>
</html>