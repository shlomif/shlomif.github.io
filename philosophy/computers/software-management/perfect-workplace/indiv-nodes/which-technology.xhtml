<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en">
<head>
<title>The Perfect IT Workplace - Revision 1 - Choose Your Technology Carefully</title>
<meta charset="utf-8"/>
<meta name="description" content=
"The Perfect IT Workplace - Revision 1 - Choose Your Technology Carefully"/>
<link rel="stylesheet" href="../../../../../faq-indiv.css" media="screen"/>
<link rel="stylesheet" href="../../../../../screenplay.css" media="screen"
title="Normal"/>
<link rel="stylesheet" href="../../../../../print.css" media="print"/>
<link rel="shortcut icon" href="../../../../../favicon.ico" type=
"image/x-icon"/>
<meta name="viewport" content="width=device-width,initial-scale=1"/>
</head>
<body class="fancy_sects faq_indiv_entry limit_imgs_width screenplay_indiv_entry">
<div class="header" id="header">
<a href="../../../../../"><img src="../../../../../images/evilphish-flipped.png"
alt="EvilPHish site logo"/></a>
<div class="leading_path"><a href="../../../../../">Shlomi Fish’s
Homepage</a> →
<a href="../perfect-it-workplace.xhtml" title="The Perfect IT Workplace - Revision 1">The Perfect IT Workplace - Revision 1</a>
 → <a href="the-elements.xhtml">The Elements of a Perfect Workplace</a>
→ <b>Choose Your Technology Carefully</b>
</div>
</div>
<div id="faux">
<main class="main faq screenplay">
<section xmlns="http://www.w3.org/1999/xhtml" class="section"><header xmlns:h="http://www.w3.org/1999/xhtml" xmlns:xhtml="http://www.w3.org/1999/xhtml" class="titlepage"><h4 id="which-technology" class="title">Choose Your Technology Carefully</h4><h:a class="back_to_faq" href="../perfect-it-workplace.xhtml#which-technology">Node Link</h:a></header><p>So which technology should you choose? I'm not giving to give a direct answer, and often there are many factors that make one more appropriate in certain cases than others. Joel Spolsky <a class="link" href="http://www.joelonsoftware.com/items/2006/09/01.html">attempted to answer this question</a>, but ended up falling into many common miconceptions and prejudices (while still making a few good points). He was also focusing exclusively on web-development.</p><p>I won't repeat this mistake here, but instead give some general guidelines.</p><section class="section"><header xmlns:h="http://www.w3.org/1999/xhtml" xmlns:xhtml="http://www.w3.org/1999/xhtml" class="titlepage"><h5 id="tech-foss-and-portability" class="title">Is it Open-source and/or Portable?</h5></header><p>One huge advantage to a technology is that it will be open-source and available on several operating systems, including most Unixes and Windows 32-bit, and on many CPU architectures. While, often you'll encounter many platform-specific bugs or libraries or programs that work properly only on certain configurations (which is expected), you should still have the choice of being able to rely on the technology being present.</p><p>For example, Microsoft's <a class="link" href="http://en.wikipedia.org/wiki/Visual_Basic">Visual Basic</a> was a closed-source and Windows 32-bit and x86 specific programming language, which had proven to be very popular. However, Microsoft decided to discontinue it completely, and as a result, many of the applications developed for it can no longer be maintained into the future, and important bugs in Visual Basic will not get fixed.</p></section><section class="section"><header xmlns:h="http://www.w3.org/1999/xhtml" xmlns:xhtml="http://www.w3.org/1999/xhtml" class="titlepage"><h5 id="tech-expect-unexpected" class="title">Expect some Unexpected Problems</h5></header><p><a class="link" href="http://www.faqs.org/docs/artu/ch16s01.html">Eric Raymond's "Tale of J. Random Newbie"</a> is illustrative of the many problems programmers encounter in highly-proprietary environments. Generally however, even if you're using proven, mature, well-documented and functional technology, you are likely to encounter bugs.</p><p>I like Perl a lot, and have recently found some bugs or even crashes in Perl code, which I've been trying to isolate and report. Perl is otherwise very good and reliable, but advanced users, or even intermediate ones are likely to discover many edge cases.</p><p>You should make sure you have the capability to isolate, report and possibly send a fix to such a technological problem, and get a prompt fix. This often depends on having good support from the technology vendor or developer.</p></section><section class="section"><header xmlns:h="http://www.w3.org/1999/xhtml" xmlns:xhtml="http://www.w3.org/1999/xhtml" class="titlepage"><h5 id="tech-power" class="title">The Technology's Power</h5></header><p>Various technologies and <a class="link" href="http://www.joelonsoftware.com/articles/Platforms.html">development platforms</a>, vary in their power and cost. As opposed to the possible misconception of "If you want something good, you'll have to pay more.", often cheaper, or even gratis (or open-source) solutions are more powerful (not to mention more reliable and faster) than their more costly counterparts.</p><p>Often, however, the really good solutions will be an overkill. Most experts I've talked with agreed that the <a class="link" href="http://www.oracle.com/database/index.html">Oracle Database</a> is the most powerful on the market and "years ahead of anything else out there". However, most run-of-the-mill web applications won't make use of even a small percentage of its advanced features, enough to justify using it instead of, say, the open-source and gratis <a class="link" href="http://www.postgresql.org/">PostgreSQL</a>.</p><p>For many problem domains, Oracle would make the most sense, but it's still not very useful in the general case.</p></section><section class="section"><header xmlns:h="http://www.w3.org/1999/xhtml" xmlns:xhtml="http://www.w3.org/1999/xhtml" class="titlepage"><h5 id="tech-habits" class="title">Habits</h5></header><p>It makes sense to <a class="link" href="http://www.joelonsoftware.com/articles/LordPalmerston.html">choose a technology which you know very well</a>, so you can overcome problems more quickly. However, smart programmers can learn different technologies very quickly. As Spolsky <a class="link" href="http://www.joelonsoftware.com/articles/ThePerilsofJavaSchools.html">notes</a>:</p><div class="blockquote"><blockquote class="blockquote"><p>The recruiters-who-use-grep, by the way, are ridiculed here, and for good reason. I have never met anyone who can do Scheme, Haskell, and C pointers who can't pick up Java in two days, and create better Java code than people with five years of experience in Java, but try explaining that to the average HR drone.</p></blockquote></div><p>If you expect that you <a class="link" href="../perfect-it-workplace.xhtml#hire-the-best-developers" title="Hire the Best Developers">will hire the best developers, as I pointed earlier</a>, then they should probably be able to pick up something new fairly quickly. If, on the other hand, you're going to hire bad programmers, then you're likely to be screwed - even if they have extensive experience with their native technology.</p><p>So you should choose the best technology - not the one for which you expect to find the most "experts".</p></section><section class="section"><header xmlns:h="http://www.w3.org/1999/xhtml" xmlns:xhtml="http://www.w3.org/1999/xhtml" class="titlepage"><h5 id="tech-reliability-and-reputation" class="title">Reliability and Reputation</h5></header><p>Often a technology will get a bad reputation as being "quirky", "hard-to-get-right", "buggy", "unreliable", etc. This for example, has been the case <a class="link" href="http://www.shlomifish.org/open-source/anti/mysql/">against MySQL</a>, <a class="link" href="http://www.google.com/search?q=php%20sucks">against PHP</a>, against Sendmail, and against other technologies. From my experience, such common criticisms often have a lot of substance for them and should be evaluated, especially if there are equally affordable technologies, but such of a better reputation.</p></section><section class="section"><header xmlns:h="http://www.w3.org/1999/xhtml" xmlns:xhtml="http://www.w3.org/1999/xhtml" class="titlepage"><h5 id="tech-case-study" class="title">Case Study</h5></header><p>I once been to a job interview in downtown Tel-Aviv, which went very well. Then I received a phone call from them that they want me to come and install Fedora Linux on the computer. I did that, and next thing I knew, I was given other tasks.</p><p>I was instructed to write a mail-processing framework in PHP. Now since I know and love Perl, I know there are many fine modules for doing that on <a class="link" href="http://sial.org/howto/perl/life-with-cpan/">CPAN (= The Comprehensive Perl Archive Network)</a>, but there was little of substantial quality for PHP. At a certain time I needed to register at a site, to download the latest version of a PHP library, that was free software, because the download required authentication. There didn't seem to be anything better.</p><p>I was told that they would prefer to write everything in PHP, because they expected to hire only PHP programmers, possibly without any Perl experience.</p><p>That wasn't all. They also decided against using <a class="link" href="http://www.postfix.org/">Postfix</a>, which is a modern, high-performance and open-source SMTP server, and instead preferred the old Sendmail SMTP server which has a far worse reputation, and an arcane configuration system.</p><p>Furthermore, they also decided to use MySQL instead of PostgreSQL, and we ran into a PHP misbehaviour (which was fixable given a lot of PHP know-how) that made us have to restart the connection to the server after every request. Both MySQL and Sendmail were chosen from political reasons.</p><p>With my PHP code barely working and prune to many errors, I decided to quit after about a month, out of being appalled by the bad code craftsmanship I could do there. Make sure you don't repeat such a mistake.</p></section></section></main>
</div>
<footer>
<div class="foot_left">
<ul class="bt_nav">
<li><a href="../../../../../">Home</a></li>
<li><a href="../../../../../me/">About</a></li>
<li><a href="../../../../../me/contact-me/">Contact Us</a></li>
<li><a href="../../../../../meta/privacy-policy/">Privacy Policy</a></li>
<li><a href="../../../../../meta/anti-spam-policy/">Anti-Spam
Policy</a></li>
<li><a href="../../../../../meta/FAQ/" title=
"Frequently asked questions list">FAQ</a></li>
<li><a href="../../../../../me/blogs/">RSS/Atom Feeds</a></li>
</ul>
<p>Written, designed, and maintained by Shlomi Fish, <a href=
"mailto:shlomif@shlomifish.org">shlomif@shlomifish.org</a>.</p>
</div>
<a href="../../../../../"><img src="../../../../../images/bk2hp-v2.min.svg" class=
"bk2hp" alt="Back to my Homepage"/></a></footer>
</body>
</html>