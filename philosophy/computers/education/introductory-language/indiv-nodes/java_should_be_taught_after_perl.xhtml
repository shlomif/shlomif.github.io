<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en">
<head>
<title>Thoughts about the Best Introductory Language - Java Should be Taught After Perl</title>
<meta charset="utf-8"/>
<meta name="description" content=
"Thoughts about the Best Introductory Language - Java Should be Taught After Perl"/>
<link rel="stylesheet" href="../../../../../faq-indiv.css" media="screen"/>
<link rel="stylesheet" href="../../../../../screenplay.css" media="screen"
title="Normal"/>
<link rel="stylesheet" href="../../../../../print.css" media="print"/>
<link rel="shortcut icon" href="../../../../../favicon.ico" type=
"image/x-icon"/>
<meta name="viewport" content="width=device-width,initial-scale=1"/>
</head>
<body class="fancy_sects faq_indiv_entry limit_imgs_width screenplay_indiv_entry">
<div class="header" id="header">
<a href="../../../../../"><img src="../../../../../images/evilphish-flipped.png"
alt="EvilPHish site logo"/></a>
<div class="leading_path"><a href="../../../../../">Shlomi Fish’s
Homepage</a> →
<a href="../" title="Thoughts about the Best Introductory Language">Thoughts about the Best Introductory Language</a>
 → <a href="relations.xhtml">Some useful relations</a>
→ <b>Java Should be Taught After Perl</b>
</div>
</div>
<div id="faux">
<main class="main faq screenplay">
<section xmlns="http://www.w3.org/1999/xhtml" class="section"><header xmlns:h="http://www.w3.org/1999/xhtml" xmlns:xhtml="http://www.w3.org/1999/xhtml" class="titlepage"><h4 id="java_should_be_taught_after_perl" class="title">Java Should be Taught After Perl</h4><h:a class="back_to_faq" href="../#java_should_be_taught_after_perl">Node Link</h:a></header><p>Joel Spolsky wrote an essay titled <a class="link" href="http://www.joelonsoftware.com/articles/ThePerilsofJavaSchools.html">&#8220;The Perils of JavaSchools&#8221;</a> where he argued that teaching Java in Computer Science curricula is inferior to teaching C and Scheme, which was what he learned. The article is wrong on many points, but it highlights some of the problems with Java.</p><p>Java is too verbose. Some people may argue that this can be solved by using a proper IDE, but as <a class="link" href="http://www.paulgraham.com/popular.html">Paul Graham explains</a>, verbose code also has the &#8220;the cost of reading it, and the cost of the space it takes up on your screen.&#8221;.</p><p>Moreover, Java code tend to be very monotonous. Almost all Java code looks the same, and feels boring.</p><p><a class="link" href="http://steve-yegge.blogspot.com/2006/03/execution-in-kingdom-of-nouns.html">Steve Yegge&#8217;s very funny article &#8220;Execution in the Kingdom of Nouns&#8221;</a> illustrates another problem with Java. Everything has to be a noun, with no verbs or even the many keywords which Perl 5 is infamous for but which Perl programmers love. And instead of having some Perl 5-like operators for converting between data structures, you have a hideously long casting lines.</p><p>Java was supposed to be kept simple, and many important concepts like closures, multiple-inheritance, defining methods at runtime (a la Smalltalk), runtime code evaluation (the Lisp-derived &#8220;eval&#8221; operator, which is now common in most dynamic languages), operator overloading, and many other elements had been kept out of it. As such it turned out to be very unusable. Java 1.5/5.0 introduced many drastic enhancements, but not enough proper abstractions. As a result, Java is now bloated, but talented programmers still normally find writing code in Perl, Python and friends more natural.</p><p>Paul Graham&#8217;s essay <a class="link" href="http://www.paulgraham.com/javacover.html">Java&#8217;s Cover</a>, which he wrote to explain why he decided not to learn Java is very instructive. I read Graham&#8217;s article, some time after it has been written and felt it reflected my feelings about the language. Back when Java started to become hyped , I had ended up learning Java to see what the hype was about and to write some browser applets. While having felt that I have truly understood what the essence of references in Perl 5 was, only after learning Java, I still felt that Java was too over-rated.</p><p>Perhaps I&#8217;m getting too carried away in criticising Java. My point is that, as Joel Spolsky indicated in his &#8220;JavaSchools&#8221; essay, teaching Java as the first language, makes many of the people who have learned it airheads, who cannot think outside the limited constraints that it imposes on the programmer. Teaching an expressive and rich <a class="link" href="http://en.wikipedia.org/wiki/Dynamic_programming_language">dynamic language</a> such as Perl or Ruby instead, will not exhibit this problem, regardless of what Joel says, as these languages constantly require a programmer to think outside the box, and introduce the programmer to many different (often built-in) patterns and paradigms.</p></section></main>
</div>
<footer>
<div class="foot_left">
<ul class="bt_nav">
<li><a href="../../../../../">Home</a></li>
<li><a href="../../../../../me/">About</a></li>
<li><a href="../../../../../me/contact-me/">Contact Us</a></li>
<li><a href="../../../../../meta/privacy-policy/">Privacy Policy</a></li>
<li><a href="../../../../../meta/anti-spam-policy/">Anti-Spam
Policy</a></li>
<li><a href="../../../../../meta/FAQ/" title=
"Frequently asked questions list">FAQ</a></li>
<li><a href="../../../../../me/blogs/">RSS/Atom Feeds</a></li>
</ul>
<p>Written, designed, and maintained by Shlomi Fish, <a href=
"mailto:shlomif@shlomifish.org">shlomif@shlomifish.org</a>.</p>
</div>
<a href="../../../../../"><img src="../../../../../images/bk2hp-v2.min.svg" class=
"bk2hp" alt="Back to my Homepage"/></a></footer>
</body>
</html>