<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en">
<head>
<title>Thoughts about the Best Introductory Language - Perl, Python or Ruby</title>
<meta charset="utf-8"/>
<meta name="description" content=
"Thoughts about the Best Introductory Language - Perl, Python or Ruby"/>
<link rel="stylesheet" href="../../../../../faq-indiv.css" media="screen"/>
<link rel="stylesheet" href="../../../../../screenplay.css" media="screen"
title="Normal"/>
<link rel="stylesheet" href="../../../../../print.css" media="print"/>
<link rel="shortcut icon" href="../../../../../favicon.ico" type=
"image/x-icon"/>
<meta name="viewport" content="width=device-width,initial-scale=1"/>
</head>
<body class="fancy_sects faq_indiv_entry limit_imgs_width screenplay_indiv_entry">
<div class="header" id="header">
<a href="../../../../../"><img src="../../../../../images/evilphish-flipped.png"
alt="EvilPHish site logo"/></a>
<div class="leading_path"><a href="../../../../../">Shlomi Fish’s
Homepage</a> →
<a href="../" title="Thoughts about the Best Introductory Language">Thoughts about the Best Introductory Language</a>
 → <a href="verdict.xhtml">My Verdict</a>
→ <b>Perl, Python or Ruby</b>
</div>
</div>
<div id="faux">
<main class="main faq screenplay">
<section xmlns="http://www.w3.org/1999/xhtml" class="section"><header xmlns:h="http://www.w3.org/1999/xhtml" xmlns:xhtml="http://www.w3.org/1999/xhtml" class="titlepage"><h4 id="perl_python_or_ruby" class="title">Perl, Python or Ruby</h4><h:a class="back_to_faq" href="../#perl_python_or_ruby">Node Link</h:a></header><section class="section"><header xmlns:h="http://www.w3.org/1999/xhtml" xmlns:xhtml="http://www.w3.org/1999/xhtml" class="titlepage"><h5 id="perl" class="title">Perl</h5></header><p>The core Perl language is huge. That may be a good or a bad thing for teaching programming in. The Perl language can be usable by learning only a small subset of the language. However, as budding Perl programmers learn more they tend to diverge in the what they know, and use different subsets, which makes understanding code of peers with different background (much less experts) more problematic. This problem is naturally not limited to Perl 5, and given good, searchable documentation can be made less substantial, but is still a pedagogical hurdle.</p><p id="esperanto_footnote">Perl is very expressive. I believe programmers will appreciate its &#8220;There is more than one way to do it&#8221; philosophy. A correspondent once told me he&#8217;d prefer to teach beginners Perl instead of C, similarly to the fact that he&#8217;d prefer to teach English over Esperanto, because beginners would prefer a language that allows them to express themselves. <a href="../#ftn.esperanto_footnote" class="footnote"><sup class="footnote">[Esperanto]</sup></a></p><p>Historically, Perl had a lack of good online documentation for beginners, and <a class="link" href="http://www.shlomifish.org/philosophy/perl-newcomers/">other problems with the treatment of newcomers</a>, but this has improved lately.</p><p id="rethinking_cpan">Perl has a rich (and so far unmatched) collection of re-usable modules that provide functionality called <a class="link" href="http://en.wikipedia.org/wiki/CPAN">CPAN - the Comprehensive Perl Archive Network</a>. Uploads to CPAN are not moderated (on purpose) and therefore it is sometimes hard to find a suitable CPAN module out of the many bad or unsuitable ones (if there actually is one available). <a href="../#ftn.rethinking_cpan" class="footnote"><sup class="footnote">[rethinking-cpan]</sup></a> They may prove useful in teaching programming in Perl.</p><p>Perl has a rich and active culture surrounding it, including many diversions as obfuscated code, <a class="link" href="http://perlgolf.sourceforge.net/">golf challenges</a>, riddles, many specialised mailing lists, Local Perl Mongers groups, and conferences.</p></section><section class="section"><header xmlns:h="http://www.w3.org/1999/xhtml" xmlns:xhtml="http://www.w3.org/1999/xhtml" class="titlepage"><h5 id="python" class="title">Python</h5></header><p>Python has a small core language and it tries to be elegant. It has an excellent online documentation, and many introductory books for it are available online. The online Python community has too much elitism, and tends to deprecate Perl a lot, for some reason. I am not blaming anyone in particular, but this tendency is present to some extent by some of the greatest names in the Python world, and by some Pythoneers I personally know.</p><p>People who know Perl very well, can learn Python with fewer mental blocks than the other way around. This is in due to the fact Perl is richer, and supports more paradigms. A Perl programmer told me he was able to start working on a Python program right after starting to edit it using his editor, and it worked, after some research.</p><p>Python&#8217;s philosophy is &#8220;There&#8217;s one good way to do it.&#8221;. It doesn&#8217;t mean that there aren&#8217;t other ways, but there is one commonly acceptable way to write most code. Whether this is a good thing or not for an introductory language is debatable.</p><p>If PHP is the new Visual Basic, and Java is the new COBOL, then Python is the new Pascal. (Although, all these languages are better than their previous ones). In a way teaching Python as a first language, like teaching Pascal, makes a programmer used to limited paradigms and one strict way of doing things. (like teaching Esperanto instead of English). As a result, trying to learn other diverse languages is becoming more difficult.</p><p>If you&#8217;ve learned Python as your mother language, you should take the mental leap and learn Perl, which is the Tower of Babel of languages, and also has many DWIMmeries (&#8220;Do-What-I-Mean&#8221;&#8217;s) and other expressiveness. (Of course, a Perl programmer should also learn Python due to its elegance, and the fact it is extensively used and useful.)</p></section><section class="section"><header xmlns:h="http://www.w3.org/1999/xhtml" xmlns:xhtml="http://www.w3.org/1999/xhtml" class="titlepage"><h5 id="ruby" class="title">Ruby</h5></header><p>Before I discuss Ruby a word of warning: I don&#8217;t know it very well. So far all the limited tasks I tried to accomplish using it worked well after some trial and error, but I still did not take the time to thoroughly study it.</p><p>Ruby was written after its creator was unhappy to some extent with both Perl (possibly 4 at the time) and Python, and so he created a language that tried to combine the best elements of Smalltalk, Perl and Python. Ruby aims to be elegant and consistent, yet still very expressive and shares Perl&#8217;s &#8220;There&#8217;s more than one way to do it&#8221; philosophy.</p><p>As of version 1.x, Ruby does not support multi-threaded programming, has poor support for Unicode, and is much slower than Perl or Python. Some of these problems will be addressed in Ruby 2.x.</p><p>The worst problem with Ruby, however, is the lack of good documentation. Ruby has <a class="link" href="http://www.rubycentral.com/book/">one old edition of the &#8220;Programming Ruby&#8221; book</a> available online, and that&#8217;s it. Furthermore, this book is intended for absolute beginners and will be too slow paced for people with extensive experience in similar languages.</p><p>All the other books from the Pragmatic Programmer series are not available online (including the new editions of the &#8220;Programming Ruby&#8221; book). What many people end up doing is downloading them from &#8220;warez&#8221; sites or from Peer-to-Peer networks, but I wouldn&#8217;t encourage professors to tell their students to do that.</p><p>I recall trying to find out how to tag methods in Ruby, in a similar way to Perl&#8217;s method or variable attributes. Google was no help and no one on Freenode on #ruby-lang told me and I asked several times, and people tried to research it. Eventually, someone I knew on #perl was able to give me the answer. He then claimed that many of the slightly more unconventional, but useful, tricks in Ruby were completely undocumented.</p><p>As such, one may still encounter problems teaching Ruby as an introductory language. If these problems are remedied by the Ruby community, with some amount of work and effort, then this may be better.</p></section></section></main>
</div>
<footer>
<div class="foot_left">
<ul class="bt_nav">
<li><a href="../../../../../">Home</a></li>
<li><a href="../../../../../me/">About</a></li>
<li><a href="../../../../../me/contact-me/">Contact Us</a></li>
<li><a href="../../../../../meta/privacy-policy/">Privacy Policy</a></li>
<li><a href="../../../../../meta/anti-spam-policy/">Anti-Spam
Policy</a></li>
<li><a href="../../../../../meta/FAQ/" title=
"Frequently asked questions list">FAQ</a></li>
<li><a href="../../../../../me/blogs/">RSS/Atom Feeds</a></li>
</ul>
<p>Written, designed, and maintained by Shlomi Fish, <a href=
"mailto:shlomif@shlomifish.org">shlomif@shlomifish.org</a>.</p>
</div>
<a href="../../../../../"><img src="../../../../../images/bk2hp-v2.min.svg" class=
"bk2hp" alt="Back to my Homepage"/></a></footer>
</body>
</html>