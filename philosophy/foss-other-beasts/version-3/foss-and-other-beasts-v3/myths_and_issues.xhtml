<?xml version="1.0" encoding="UTF-8"?><html xmlns="http://www.w3.org/1999/xhtml" lang="en-GB"><head><title>Myths about Open Source and Other Issues</title><link rel="stylesheet" type="text/css" href="docbook.css"/><link rel="stylesheet" type="text/css" href="style.css"/><meta name="generator" content="DocBook XSL Shlomif"/><link rel="prev" href="criteria.xhtml" title="Other Criteria of Open Source Software"/><link rel="next" href="challenges_to_foss.xhtml" title="Challenges to Free and Open Source Software"/></head><body><header><div class="center ads_top"/><div class="navheader"><table style="width:100%"><tr><th style="text-align:center" colspan="3">Myths about Open Source and Other Issues</th></tr><tr><td style="width:20%;text-align:left"><a accesskey="p" href="criteria.xhtml">Prev</a> </td><th style="width:60%;text-align:center"> </th><td style="width:20%;text-align:right"> <a accesskey="n" href="challenges_to_foss.xhtml">Next</a></td></tr></table><hr/></div></header><section class="section"><div class="titlepage"><div><div><h2 id="myths_and_issues" class="title">Myths about Open Source and Other Issues</h2></div></div></div><div class="toc"><ul class="toc"><li><span class="section"><a href="myths_and_issues.xhtml#sharing_and_communism">Sharing software huh? Isn’t it a bit like Communism?</a></span></li><li><span class="section"><a href="myths_and_issues.xhtml#out_of_work">The “Programmers Will be out of Work” because of Free Software Myth</a></span></li><li><span class="section"><a href="myths_and_issues.xhtml#myths_about_open_source">Other Myths about Linux and Open Source Software</a></span></li></ul></div><section class="section"><div class="titlepage"><div><div><h3 id="sharing_and_communism" class="title">Sharing software huh? Isn’t it a bit like Communism?</h3></div></div></div><p>This analogy is not new but very deceptive. First of all, there’s nothing anti-Capitalistic about sharing something voluntarily. While in a Capitalistic country, goods are generally sold and have to be paid for, people can <span class="emphasis"><em>voluntarily</em></span> dedicate their time and money for any cause they wish, possibly altruistic. Communism in fact <span class="emphasis"><em>forces</em></span> the sharing of all good, including physical ones that take time and money to manufacture each unit of.</p><p>Secondly, because manufacturing and distributing a unit of software costs practically nothing, it is not necessary that it will be sold. While the development cost can be very large, a developer of the software will not be encumbered by it being used by a million people instead of a thousand.</p><p>Furthermore, by making a software package open-source and keeping it so, it is possible to gain other economical and psychological advantages: you’ll make sure it is maintained, gain feedback and admiration of others, and may be able to eventually receive input and contributions from the outside. Distributing software as commercial proprietary packages does not automatically yield good advantages and it takes a lot of time and money to make it usable as well. Such a vendor is actually risking that his software will work at all, and not be out-competed by something better.</p><p>This analogy was rejected and treated in a semi-jokily manner by most people who did not oppose Capitalism as a whole. A true understanding of why open-source does not contradict the liberal ideals of Capitalism and Individualism originated from Eric Raymond’s <a class="link" href="http://www.catb.org/~esr/writings/cathedral-bazaar/homesteading/">“Homesteading the Noosphere”</a> and <a class="link" href="http://www.catb.org/~esr/writings/cathedral-bazaar/magic-cauldron/">“The Magic Cauldron”</a>, which are a very good read anyway you look at it.</p><p>The facts themselves do not give way to it either. The free software movement is almost entirely limited to liberal Capitalistic countries, which are free enough to allow unrestricted programming and distribution of software to prosper. Furthermore, I cannot name a single prominent figure who is Socialist or Communist, or otherwise entirely anti-Capitalistic (albeit some may hold certain views of this kind). Lastly, open source or some open source software was recently endorsed by many IT and non-IT businesses who greatly benefit from it, including some vendors of proprietary software.</p><p>Finally, even assuming that free and open source software or partly-free-and-open cultural works (e.g: the various Creative Commons licences) have some elements of Communism or Socialism, does it really matter? After all, we enjoy the fruits of the many people who contributed to open source, the Wikipedias and other Wikimedia projects and various other free or mostly free works of culture and code, which would probably not have happened without them being free. As a result, even if open-source is indeed communistic or socialistic, it is nevertheless “good for the people” so to speak and should not be discouraged.</p><p>All of that put aside, it is clear that copyright laws do not and must not prevent people from applying not-fully-restrictive (nicknamed “All Rights Reserved”) licences to their original works, so eventually there will be enough people who out of either desiring to <a class="link" href="http://www.shlomifish.org/philosophy/computers/open-source/gpl-bsd-and-suckerism/">“help their neighbour” and/or out of motives that have more an aspect of a rational self-interest</a> and without being forced to do so against their will, will be willing to release their works under open or semi-open licences.</p></section><section class="section"><div class="titlepage"><div><div><h3 id="out_of_work" class="title">The “Programmers Will be out of Work” because of Free Software Myth</h3></div></div></div><p>It is unlikely that assuming Open Source becomes the dominant paradigm, it will imply that programmers will “starve to death”. As <a class="link" href="http://www.catb.org/~esr/writings/cathedral-bazaar/magic-cauldron/ar01s03.html">Eric Raymond notes in the Magic Cauldron</a>, the vast majority of software applications out there are one without a sale value: be it software that large organization like banks, insurance companies or militaries use to power their critical systems, customizations, scripts or code used within smaller organizations (Microsoft Access customizations, spreadsheets’ formulae and macros, Perl or shell scripts), embedded software whose source code is not released to the public, software that powers web-sites and was not released to the public, etc.</p><p>The majority of programmers out there are employed for developing such code, whose codebase dwarfs that of the marketplace software that includes all commercial and open-source software put together.</p><p>In due times, packages are developed and become available that makes some tasks that were once hard to do internally almost straightforward to set up and run. Nevertheless, these packages still require a clueful person to operate, diagnose problems, communicate with the vendor or developer and manage the configuration. For example, a complete computer beginner will probably not know what to do with a spreadsheet program (such as Microsoft Excel) without thoroughly studying it. Afterwards, it becomes a very useful tool.</p><p>Even if programmers do become out of job as a result of free software, then it will not necessarily a bad thing. It means that it solved problems that otherwise required extra hands, and so those programmers can be allocated for something else entirely that is more productive.</p></section><section class="section"><div class="titlepage"><div><div><h3 id="myths_about_open_source" class="title">Other Myths about Linux and Open Source Software</h3></div></div></div><p>One can very often hear many myths or generally accepted “truths” about open source software and Linux, some of which negative and other positive. Examples include:</p><p>1. Open source software is less secure than software whose source code is not revealed, because people can find bugs at it by looking at the code.</p><p>2. Open source software is more secure than closed-source software because more people can review the code and discover bugs in it.</p><p>3. Linux is harder to use than Windows.</p><p>4. Linux is not compatible with Windows.</p><p>5. Open source gives way to forking more easily.</p><p>And many others. The <a class="link" href="http://www.linuxmafia.com/~rick/myths.html">Linux Myth Dispeller</a> attempted to answer some of these, with a focus on negative myths. Myth #1 is completely false as bugs can still be found by analysing the disassembly of the machine code. Also often such bugs are found by accident due to a certain valid use of the software) There were many closed-source packages out there in which many bugs have already been discovered. (like Microsoft Outlook, Microsoft IIS or <a class="link" href="http://www.shlomifish.org/no-ie/">Microsoft Internet Explorer</a>). Some of these already became widely exploited a long time before a vendor patch was made available.</p><p>Myth #2 has a grain of truth in it. However, some open source packages nevertheless had very poor security records out of poor programming practices. Some closed-source offerings, on the other hand, have a very good security record. In most packages, security bugs occurred due to sloppy programming practice, or lack of auditing of the code. They can be mostly avoided whether or not the package’s source code is available to the public.</p><p>Myth #5 is not entirely true. While it is possible to fork a piece of open-source software, most packages have not been actually forked. Eric Raymond covers the customs that relate to forking a package in <a class="link" href="http://www.catb.org/~esr/writings/cathedral-bazaar/homesteading/">“Homesteading the Noosphere”</a>, and Rick Moen explains why when major packages forked, it was not necessarily a bad thing in his <a class="link" href="http://www.linuxmafia.com/~rick/essays/forking.html">“Fear of Forking essay”</a>.</p><p>Moreover, many times proprietary software was forked as well. There are many flavours of System V UNIX out there, and there used to be many more. Microsoft released three different lines of Windows flavours with two or more simultaneously, and has many localised versions. (Which are many times incompatible with one another.)</p></section></section><footer><div class="navfooter"><hr/><table style="width:100%"><tr><td style="width:40%;text-align:left"><a accesskey="p" href="criteria.xhtml">Prev</a> </td><td style="width:20%;text-align:center"> </td><td style="width:40%;text-align:right"> <a accesskey="n" href="challenges_to_foss.xhtml">Next</a></td></tr><tr><td style="width:40%;text-align:left;vertical-align:top">Other Criteria of Open Source Software </td><td style="width:20%;text-align:center"><a accesskey="h" href="index.xhtml">Home</a></td><td style="width:40%;text-align:right;vertical-align:top"> Challenges to Free and Open Source Software</td></tr></table></div></footer></body></html>