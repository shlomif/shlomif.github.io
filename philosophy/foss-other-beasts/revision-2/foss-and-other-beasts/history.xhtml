<?xml version="1.0" encoding="UTF-8"?><html xmlns="http://www.w3.org/1999/xhtml" lang="en"><head><title>History</title><link rel="stylesheet" type="text/css" href="docbook.css"/><link rel="stylesheet" type="text/css" href="style.css"/><meta name="generator" content="DocBook XSL Shlomif"/><link rel="prev" href="meaning_of_terms.xhtml" title="Meaning of the terms"/><link rel="next" href="difference_of_views.xhtml" title="Difference between &quot;Open Source&quot; and &quot;Free Software&quot;."/></head><body><header><div class="center ads_top"/><div class="navheader"><table style="width:100%"><tr><th style="text-align:center" colspan="3">History</th></tr><tr><td style="width:20%;text-align:left"><a accesskey="p" href="meaning_of_terms.xhtml">Prev</a> </td><th style="width:60%;text-align:center"> </th><td style="width:20%;text-align:right"> <a accesskey="n" href="difference_of_views.xhtml">Next</a></td></tr></table><hr/></div></header><section class="section"><div class="titlepage"><div><div><h2 id="history" class="title">History</h2></div></div></div><div class="toc"><ul class="toc"><li><span class="section"><a href="history.xhtml#history_unix_bsd">Early Days, AT&amp;T UNIX, BSD</a></span></li><li><span class="section"><a href="history.xhtml#history_gnu_free_soft">Richard Stallman, the GNU Project, and the "Free Software" term</a></span></li><li><span class="section"><a href="history.xhtml#history_linux">The Linux Kernel, GNU/Linux and the Debian Free Software Guidelines</a></span></li><li><span class="section"><a href="history.xhtml#history_open_source">The "Cathedral and the Bazaar" and the coining of the term "Open-Source"</a></span></li><li><span class="section"><a href="history.xhtml#history_recent_developments">Linux Becomes More Popular</a></span></li><li><span class="section"><a href="history.xhtml#open_source_and_open_content_become_mainstream">Open Source and Open Content Become Mainstream</a></span></li></ul></div><p>This section is not a definitive overview of the history of the free software movement. It focuses on the issues regarding the usage of the common terms.</p><section class="section"><div class="titlepage"><div><div><h3 id="history_unix_bsd" class="title">Early Days, AT&amp;T UNIX, BSD</h3></div></div></div><p>The free software movement (before it was called this way) started organically from individuals who distributed code they wrote under the Public Domain or what would now be considered open source or semi-open source licences.</p><p>AT&amp;T UNIX that started at 1969 was the first showcase for this movement. Several Bell Labs Engineers led by Ken Thompson developed UNIX for their own use, and out of legal restrictions AT&amp;T faced, decided to distribute it to academic organizations and other organizations free-of-charge with the source included. (that licence did not qualify as open-source but it was pretty close). UNIX eventually sported the C programming languages, which enabled writing code that would run on many platforms easier, and the UNIX sources included a C compiler that was itself written in C. Around the early 70's the only computers capable of running UNIX were main-frames and the so-called "mini-computers" so there initially weren't as many installations as only large organizations could support buying computers to deploy UNIX on.</p><p id="present_day_unixes">That changed as integrated circuits, and computers became cheaper and more powerful. Very soon, cheap UNIX-based servers and workstations became commonplace and the number of UNIX installations exploded. <a href="#ftn.present_day_unixes" class="footnote"><sup class="footnote">[1]</sup></a></p><p>Nadav Har’El has prepared <a class="link" href="http://groups.yahoo.com/group/hackers-il/message/1731">a coverage of the BSDs and early AT&amp;T UNIX history</a>.</p><p>The Berkeley University forked its own version of AT&amp;T UNIX and started re-writing parts of the code, and incorporating many changes of its own. The original parts were licensed under the BSD license which is a copyright licence that is almost entirely Public Domain. The BSD system became very popular (perhaps even more than the AT&amp;T one).</p><p>When Arpanet, the predecessor to the Internet was disbanded due to inadequacy, the Internet converted to running on top of 32-bit UNIX boxes such as the <a class="link" href="http://en.wikipedia.org/wiki/VAX">VAX architecture by Digital Equipment Corporation</a> (now part of Hewlett-Packard). This caused a merging of the UNIX culture with the Arpanet enthusiasts who exchanged code on the Arpanet, and UNIX programmers started sharing code for various components and add-ons of UNIX on the Internet.</p></section><section class="section"><div class="titlepage"><div><div><h3 id="history_gnu_free_soft" class="title">Richard Stallman, the GNU Project, and the "Free Software" term</h3></div></div></div><p>After a while, the legal restrictions posed on AT&amp;T subsided, and it started to "smell money" and believe it can do better selling UNIX commercially. It created the AT&amp;T System V system, touted it was better than AT&amp;T UNIX and the BSDs, and sold it to vendors. System V was sold under a very restrictive licence, that forced them to hold the source code for themselves. Even cooperation between two different vendors was not allowed.</p><p>Gradually, vendors licensed the System V source code and ported it to their own architectures. This caused an explosion of proprietary UNIX systems. What Sun Microsystems initially did was actually take the BSD source code, diverge from it and distribute it without full access to the code. (something that was allowed by its licence). A similar thing happened with other software distributed under similar licences.</p><p>To answer this threat, a new phenomenon sprang into existence: the "free software" movement, the GNU project and the copyleft licences, all led by one dynamic personality: Richard M. Stallman.</p><p>Richard Stallman (aka RMS) published <a class="link" href="http://www.gnu.org/gnu/manifesto.html">the GNU Manifesto</a> in 1984, which coined the term "free software", and explained the rationale behind it. The Manifesto was also a creed for the the GNU project which aimed to be a complete UNIX-compatible replacement for UNIX systems, while being completely original work. The software of the GNU project was released as free software, under the terms of the <a class="link" href="http://www.gnu.org/copyleft/gpl.html">GNU General Public License</a> (or GPL for short).</p><p>Gradually, the GNU project created more and more C code to replace the UNIX and BSD utilities. It was already installable and usable on various flavours of UNIX, and became a fully independent system once the Linux kernel was written.</p><p>The GPL licence is a free software licence that has many fine points. The most important concepts in it are:</p><div class="orderedlist"><ol class="orderedlist" type="1"><li class="listitem"><p><a class="link" href="http://www.gnu.org/copyleft/">Copyleft</a> - making sure that derived work that are distributed to the outside includes the source and is distributed under the same licence. Note that this does not apply to modifications done for internal or private use.</p></li><li class="listitem"><p>Restrictive Integration by Other Code bases - GPL code can only be linked against code with free software licences that match some criteria. This property has been recently referred to as "viral".</p></li></ol></div><p>The incentive to restrict a software this way rather than following the traditional virtually public domain BSD licence, was to make sure that the core GNU system would always remain free as well.</p></section><section class="section"><div class="titlepage"><div><div><h3 id="history_linux" class="title">The Linux Kernel, GNU/Linux and the Debian Free Software Guidelines</h3></div></div></div><p>In 1992 Linus Torvalds, then a student at Helsinki University, began writing the "Linux" kernel - a 32-bit kernel for UNIX-like operating systems. The kernel development advanced rapidly and was released under the GPL licence starting from an early stage. To complete the system and make it into a usable UNIX system, the Linux developers used various existing user-land utilities and libraries from the GNU project and other sources (such as the X-Windows system), and wrote a few user-land utilities from scratch.</p><p>From an early stage, this entire system was dubbed "Linux" as well. Richard Stallman instead has advocated the name <a class="link" href="http://www.gnu.org/gnu/linux-and-gnu.html">"GNU/Linux"</a> (pronounced "ggnoo-Linux") which acknowledges the fact that the GNU project contributed the lion's share of the system. (as well as some pre-requisites of the Linux kernel itself). Most people haven't consistently followed this piece of advice.</p><p>The importance of the Linux kernel was that it was the last brick in materialising a fully GNU system. Since GNU tools tend to be more complete, feature-rich and generally superior to tools of other systems, this has made Linux one of the most powerful UNIX systems available. Nowadays, most UNIX servers out there and almost all workstations run the GNU/Linux system. Linux was, thus, the spearhead that guided the acceptance of free software into the mainstream.</p><p><a class="link" href="http://www.debian.org/">Debian GNU/Linux</a> was a Linux distribution that was eventually endorsed by the GNU project. One of the things that made it unique was the fact it distinguished between "free" and "non-free" packages as far as the user is concerned. The <a class="link" href="http://www.debian.org/social_contract.html">guidelines for determining which software is "free" in the Debian sense</a> were phrased by Bruce Perens.</p><p>Note that they deviate from the free software definition (which was phrased later on) and include some licences that are not free. I.e: "Debian Free" is a superset of free software according to the Stallman definition.</p><p>This fact is important because later on, the Debian Free Software Guidelines formed the basis for the open-source definition.</p></section><section class="section"><div class="titlepage"><div><div><h3 id="history_open_source" class="title">The "Cathedral and the Bazaar" and the coining of the term "Open-Source"</h3></div></div></div><p>Eric Steven Raymond (now also known as ESR) wrote <a class="link" href="http://www.catb.org/~esr/writings/cathedral-bazaar/cathedral-bazaar/">an essay titled "The Cathedral and the Bazaar"</a> and presented it to the Linux Kongress at 21 May 1997. This contrasted the Bazaar way of managing a software project and the old "Cathedral" way, that was used by almost all non-free projects and (until that point at least) by most free ones.</p><p>"Bazaar" projects are characterised by frequent and incremental release schedules, treating the users as co-developers, and generally getting a lot of peer review, ideas, input and cooperation. Despite a common misconception, the core group of the project contributors still usually remains relatively small except for very large projects.</p><p>The article is considered one of the seminal works on free software and was followed by other works in what is collectively known as the <a class="link" href="http://www.catb.org/~esr/writings/cathedral-bazaar/">"Cathedral and the Bazaar" (or CatB for short) series</a>. It has made Eric Raymond a famous person at least among the community of free software hackers.</p><p>In February 3, 1998, in Palo Alto California, a brainstorming session which Raymond attended, coined the term "open source" as an alternative for "free software". Their incentive was that when talking to a businessman, either free software will be understood as software that costs nothing, or it will be associated with the relatively anti-Capitalistic views held by Richard Stallman (who claims non-free software is immoral). They decided that the term "open source" would be a better candidate for acceptance in the corporate world.</p><p>Consult <a class="link" href="http://opensource.org/docs/history.php">the opensource.org history document</a> for further coverage of the history of the term.</p><p>During the following week, Eric Raymond, and Bruce Perens launched the <a class="link" href="http://www.opensource.org">opensource.org</a> web-site, and formed the Open source definition. This was based on the Debian Free Software Guidelines.</p><p>The term "open source" caught on. Very soon, Richard Stallman decided to reject it on the premise that the freedom of software is more important than the "openness" of its code. While he does not oppose the openness of the code, and acknowledges the fact that free software is open source as well, its freedom remained more important. For more information read the document <a class="link" href="http://www.gnu.org/philosophy/free-software-for-freedom.html">"Free Software for Freedom"</a> on the GNU web-site.</p><p>While some people have continuously stuck to the term "free software" and a few others converted to using "open source" entirely, most knowledgeable people don't completely reject either term, and use each one whenever they see fit. Nevertheless, the term "open source" is more commonly used by both open source developers and even more so by non open source developers. See <a class="link" href="http://catb.org/~esr/writings/terminology/">Eric Raymond's "Terminology Wars"</a> for more details.</p></section><section class="section"><div class="titlepage"><div><div><h3 id="history_recent_developments" class="title">Linux Becomes More Popular</h3></div></div></div><p>Since 1997, Linux and other open-source systems have become more and more popular. Linux saw a lot of success in the server market, where cheap PCs that can be bought in stores can serve as an almost full replacement for more costly UNIX servers by installing Linux. Even if the latter are used, they very often run open source servers and other open source programs, utilities and frameworks.</p><p>Linux has become the number one choice for constructing clusters, a large set of computers that are networked together to form a fast computation system, with powers that rival or exceed super-computers. There are various kinds of clusters around. Some of them are performed at a relatively high level. Others, try to make the system believe it has as many processors as there are nodes.</p><p>Linux also had a lot of success in the embedded market, serving as the framework for creating software that is embedded in hardware.</p><p>The Internet boom not only made free software more essential for its operation , but also enabled more and more users and developers to share their code, get help and work together for advancing it.</p><p>At the moment, Linux had a much more limited success as a choice for a desktop system. While being the only operating system that is gaining market share, it still has a very low one, in comparison to Microsoft solutions. Many projects started to supply users with desktop and GUI environments and applications. Some of them are very mature, usable and successful. Only time can tell if and when Linux becomes the default solution for the desktop.</p><p>Apple's Mac OS X was released and is based on Darwin, which is an open-source BSD-derived system. Mac OS X can run UNIX applications natively, and supports the X-Windows system, which is the de-facto GUI framework for UNIXes (including Linux). It is therefore a popular UNIX choice for PowerMac computers (and more recently for Macintosh computer based on Intel-based chips), albeit not the only one since Linux, and various open-source BSD clones and other UNIXes can run there as well.</p><p>The recent recession in the information technology market, did not seem to slow down the development of open source software. <a class="link" href="http://freshmeat.net/">Freshmeat</a> is still busy as ever with releases of new software, and since the recession started, many important new releases were done for a lot of major applications and even many more less important ones.</p></section><section class="section"><div class="titlepage"><div><div><h3 id="open_source_and_open_content_become_mainstream" class="title">Open Source and Open Content Become Mainstream</h3></div></div></div><p>While open source software has existed for DOS and Microsoft Windows practically since the beginning, and some of it was relatively popular among people, most of the software available for these platforms has been non-open-source binary-only software, a lot of it from Microsoft.</p><p>This has started to change recently. The <a class="link" href="http://www.mozilla.com/firefox/">Firefox browser</a> from the home of the Mozilla Foundation (and now also the Mozilla Corporation), is an open-source, modern and sophisticated browser, that has been virally publicised by various means such as <a class="link" href="http://www.spreadfirefox.com/">the various "Spread Firefox" campaigns</a>. It has become popular and as of July 2006 has passed the 10% usage in web site hits according to some firms, and in some countries much more so. It is still gaining some market share, even if it's growth has declined somewhat.</p><p>Other cross-platform open source software includes <a class="link" href="http://www.openoffice.org/">OpenOffice.org</a>, a powerful and usable office productivity software for Windows, Linux and other platforms, <a class="link" href="http://www.gimp.org/">the GIMP (GNU Image Manipulation Program)</a>, a sophisticated raster image editing program, and <a class="link" href="http://www.inkscape.org/">Inkscape</a>, a vector editing program, and also most Peer-to-Peer networking clients. These have probably seen less popularity than Firefox, but are still providing cheap, open, modifiable alternatives to traditional binary-only software.</p><p>In 2003, a study was published that estimated that <a class="link" href="http://discuss.fogcreek.com/joelonsoftware3/default.asp?cmd=show&amp;ixPost=98232&amp;ixReplies=39">by 2004, more developers will work on Linux than on Windows</a>. While it definitely does not mean that more people will use Linux at home, it is still a good indication for its general mainstream acceptance and usefulness.</p><p>Another important recent trend was <span class="bold"><strong>the rise of open content</strong></span>. <a class="link" href="http://fc-solve.shlomifish.org/oss-fs/docbook/">The first edition of this article</a>, included <a class="link" href="http://fc-solve.shlomifish.org/oss-fs/docbook/oss-fs/x181.html">a small section about "open content"</a>, where I concluded by saying that "Only time can tell whether other elements of open source besides its freely distributable nature will have an impact in other areas of creative arts besides software.". Now, about 3 years later, I can say that by all means open content has already proven to be a great success.</p><p>Among the landmarks of open or semi-open content are:</p><div class="orderedlist"><ol class="orderedlist" type="1"><li class="listitem"><p><a class="link" href="http://creativecommons.org/">The Creative Commons project</a> that specifies licences for open content, semi-open content or just freely redistributable artworks for individuals and organisations to use in their artwork, as well as supplying several resources for facilitating their publishing and use.</p><p>Creative Commons licences have proven to be very popular among many web publishers for use in their works.</p></li><li class="listitem"><p><a class="link" href="http://wikimedia.org/">The Wikimedia Foundation</a> publishes several online multi-lingual wikis - web sites that are editable by the surfers - all under an open content licence. The most famous and important one are <a class="link" href="http://www.wikipedia.org/">the Wikipedias</a>, which are free, online encyclopaedias. The English Wikipedia (which is still the largest) is larger than Encyclopaedia Britannica and Microsoft Encarta combined and is growing rapidly.</p></li><li class="listitem"><p>There are many sites for independent musicians, such as <a class="link" href="http://www.garageband.com/">GarageBand.com</a>, <a class="link" href="http://ccmixter.org/">ccMixter</a>, and <a class="link" href="http://magnatune.com/">Magnatune</a> (a record label that publishes artists whose songs are under a freely redistributable licence).</p></li><li class="listitem"><p>From weblogs and weblog comments, to wikis, to audiocasts or video-blogs - open or semi-open content is everywhere.</p></li></ol></div></section><div class="footnotes"><br/><hr class="footnote-hr"/><div id="ftn.present_day_unixes" class="footnote"><p><a href="#present_day_unixes" class="para"><sup class="para">[1] </sup></a>At present day, UNIX clones such as Linux or the BSDs can run on regular Pentium-based computers that can be bought from PC shops. Most PC computers nowadays can out-compete the UNIX workstations of a few generations back. This allow assembling a UNIX server which is much more powerful and much less costly than the past ones, and that suffices for most needs.</p></div></div></section><footer><div class="navfooter"><hr/><table style="width:100%"><tr><td style="width:40%;text-align:left"><a accesskey="p" href="meaning_of_terms.xhtml">Prev</a> </td><td style="width:20%;text-align:center"> </td><td style="width:40%;text-align:right"> <a accesskey="n" href="difference_of_views.xhtml">Next</a></td></tr><tr><td style="width:40%;text-align:left;vertical-align:top">Meaning of the terms </td><td style="width:20%;text-align:center"><a accesskey="h" href="index.xhtml">Home</a></td><td style="width:40%;text-align:right;vertical-align:top"> Difference between "Open Source" and "Free Software".</td></tr></table></div></footer></body></html>